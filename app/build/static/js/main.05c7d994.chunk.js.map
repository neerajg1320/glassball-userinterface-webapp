{"version":3,"sources":["components/topbar/Topbar.jsx","components/sidebar/settings/SettingsSidebar.jsx","components/sidebar/dashboard/DashboardSidebar.jsx","components/sidebar/Sidebar.jsx","components/pageDisplay/pages/filesDashboard/chart/Chart.jsx","components/pageDisplay/pages/filesDashboard/featuredInfo/FeaturedInfo.jsx","dummyData.js","redux/resource/resourceAction.types.js","redux/resource/resource.actions.js","redux/config/configAction.types.js","redux/config/config.actions.js","redux/auth/authAction.types.js","redux/auth/auth.actions.js","helpers/spreadsheet.js","components/pageDisplay/resourceDisplay/ResourceListItem.jsx","components/pageDisplay/resourceDisplay/ResourceList.jsx","components/pageDisplay/resourceDisplay/ResourceDisplay.jsx","components/pageDisplay/pages/filesDashboard/filesPreview/imagePreview/ImagePreview.jsx","helpers/files.js","components/pageDisplay/pages/filesDashboard/filesPreview/pdfPreview/PdfPreview.jsx","components/common/textArea/TextAreaCustom.jsx","components/pageDisplay/pages/filesDashboard/filesPreview/textPreview/TextPreview.jsx","helpers/urls.js","helpers/date.js","components/pageDisplay/pages/filesDashboard/filesPreview/spreadsheetPreview/SSReactTable.jsx","components/pageDisplay/pages/filesDashboard/filesPreview/spreadsheetPreview/SpreadsheetPreview.jsx","components/pageDisplay/pages/filesDashboard/filesPreview/PreviewDisplay.jsx","components/pageDisplay/pages/filesDashboard/FilesDashboardPage.jsx","components/common/ProgressBarCustom.jsx","components/common/bulkdatagrid/BulkDataGrid.jsx","components/common/reactselectsample/SingleSelectDropdown.jsx","components/pageDisplay/pages/filesGrid/FilesInput.jsx","components/common/modal/SampleModal.jsx","components/pageDisplay/pages/resource/ResourceGrid.jsx","components/pageDisplay/pages/filesGrid/FilesGridPage.jsx","config/default_config.js","components/pageDisplay/pages/filesSingle/FileSingleDirectPage.jsx","helpers/server.js","components/pageDisplay/pages/portfolioTransactions/TransactionInput.jsx","components/common/security/SecurityCell.jsx","components/pageDisplay/pages/portfolioTransactions/TransactionsGridPage.jsx","components/pageDisplay/pages/settingsServer/SettingsServer.jsx","components/pageDisplay/pages/portfolioPositions/PositionInput.jsx","components/common/security/DualTrades.jsx","components/pageDisplay/pages/portfolioPositions/PositionsGridPage.jsx","components/pageDisplay/pages/portfolioOpenPositions/OpenPositionInput.jsx","components/common/security/OpenTrade.jsx","components/pageDisplay/pages/portfolioOpenPositions/OpenPositionsGridPage.jsx","components/pageDisplay/pages/financialInvoices/InvoicesInput.jsx","components/pageDisplay/pages/financialInvoices/InvoicesGridPage.jsx","components/pageDisplay/pages/financialTransactions/FinTransactionsInput.jsx","components/pageDisplay/pages/financialTransactions/FinTransactionsGridPage.jsx","components/pageDisplay/PageDisplay.jsx","redux/resource/resource.reducer.js","redux/config/config.reducer.js","redux/auth/auth.reducer.js","redux/rootReducer.js","redux/store.js","App.jsx","index.js"],"names":["Topbar","className","to","NotificationsNone","Language","Settings","src","alt","SettingsSidebar","ChromeReaderMode","DashboardSidebar","GridOn","AttachFile","Equalizer","TrendingUp","Sidebar","path","Chart","title","data","dataKey","grid","ResponsiveContainer","width","aspect","LineChart","XAxis","stroke","YAxis","Line","type","Tooltip","CartesianGrid","strokeDasharray","Legend","FeaturedInfo","ArrowDownward","ArrowUpward","userData","name","baseId","generateId","ADD_RESOURCE","UPDATE_RESOURCE","REMOVE_RESOURCE","SET_RESOURCES","SET_CURRENT_RESOURCE","addResource","resType","resource","payload","updateResource","id","update","removeResource","resourceId","addResourceAsync","dispatch","uploadResourceAsync","fileObj","formData","action","console","log","getState","uploadUrl","configReducer","server","axios","post","headers","authReducer","token_title","token","onUploadProgress","progress","completedPercent","Math","round","loaded","size","completed","then","response","addedResource","file","uploaded","catch","error","removeResourceAsync","delete","status","fetchResourcesAsync","params","url","get","resources","length","map","setResources","setCurrentResourceAsync","link","setCurrentResource","ADD_CONFIG","UPDATE_CONFIG","REMOVE_CONFIG","updateConfigAsync","key","value","updateConfig","SET_TOKEN","CLEAR_TOKEN","setTokenAsync","setToken","readExcelFile","Promise","resolve","reject","fileReader","FileReader","onload","e","target","result","sheetMap","wb","SheetNames","forEach","ws","rows","XLSX","sheet_to_row_object_array","Sheets","converExcelWbToJson","onerror","readAsArrayBuffer","connect","rItem","onResourcePreviewClick","onResourceDownloadClick","downloadUrl","authToken","fileName","ssFile","request","method","responseType","blob","window","URL","createObjectURL","Blob","document","createElement","href","setAttribute","body","appendChild","click","parentNode","removeChild","onClick","PictureAsPdfRounded","textFile","TextFormat","CalendarViewMonth","FileDownload","Delete","ResourceList","rList","state","files","resourceReducer","ImagePreview","image_extensions","pdf_extensions","text_extensions","spreadsheet_extensions","checkFileExtn","filename","extensions","parts","split","includes","isPdf","isText","isSpreadsheet","createFileObj","selectedFile","PdfPreview","onLoad","pdfjs","GlobalWorkerOptions","workerSrc","version","useState","numPages","setNumPages","pageNumber","setPageNumber","changePage","offset","prevPageNumber","onLoadSuccess","style","display","marginBottom","disabled","marginRight","TextAreaCustom","props","css","TextPreview","text","setText","getUrlContentsAsync","contents","cols","jsDateToString","date","format","dateFormatter","dateStr","formattedDate","d","Date","jsDateToStringFormat","SSReactTable","columns","setColumns","useEffect","firstRow","item","toISOString","row","colArray","Object","keys","push","Header","accessor","generateReactTableColumns","useTable","getTableProps","getTableBodyProps","headerGroups","prepareRow","headerGroup","getHeaderGroupProps","column","getHeaderProps","render","getRowProps","cells","cell","getCellProps","SpreadsheetPreview","sheets","setSheets","fileUrl","inner","sheetsArray","sheet","index","currentLink","fileurl","undefined","FilesDashboardPage","featured","chart","flagFeatured","flagChart","ProgressBarCustom","bgcolor","fillerStyles","height","backgroundColor","borderRadius","textAlign","padding","color","fontWeight","BulkDataGrid","onRefresh","onBulkDelete","onFileDownload","selectedRows","setSelectedRows","bulkClass","setBulkClass","Refresh","pageSize","rowsPerPageOptions","checkboxSelection","disableSelectionOnClick","onSelectionModelChange","ids","SingleSelectComponent","accountOptionsDefault","docTypeOptionsDefault","label","getResourceOptions","res","o","filter","docTypes","accounts","addFileAsync","uploadFileAsync","fetchDocTypesAsync","fetchAccountsAsync","onClose","onResourceClose","removeFileAsync","accountsOptions","setAccountsOptions","selectedAccount","setSelectedAccount","documentTypesOptions","setDocumentTypeOptions","selectedDocumentType","setSelectedDocumentType","setPath","selectedFiles","setSelectedFiles","fileObjs","setFileObjs","password","setPassword","saveEnabled","setSaveEnabled","filesInputRef","useRef","filesListRef","field","headerName","renderHeader","hparams","headerClassName","renderCell","clearSelectedFiles","current","prevFiles","options","clearFilesOnStore","defaultValue","opt","onChange","option","fileObjects","fileObject","onFileSelectionChange","ref","multiple","placeholder","FormData","append","Modal","setAppElement","SampleModal","children","isOpen","onModalClose","onRequestClose","contentLabel","overlayClassName","closeTimeoutMS","downloadResourcesAsync","actionResourcesAsync","showAddResourceModal","setShowAddResourceModal","closeAddResourceModal","childrenWithAddedProps","React","Children","child","cloneElement","FileUpload","handleFileChange","deleteResourceById","fetchFilesAsync","onFilePathClick","open","Done","Clear","PictureAsPdf","DeleteOutline","deleteFileById","host_url","api_url","media_url","FileSingleDirectPage","useParams","config","media","SecurityCell","securityName","securityType","expiryDate","optionStrike","optionType","transactions","valueFormatter","transactionDate","valueGetter","hide","align","k","v","tokenVal","setTokenVal","PositionInput","onSave","inst","setInst","docType","setDocType","DualTrades","openTradeType","openTradeDate","costBasis","proceeds","closeTradeType","closeTradeDate","positions","consolidated","OpenPositionInput","OpenTrade","openpositions","InvoicesInput","invoices","FinTransactionsInput","finTransactions","PageDisplay","exact","component","initialState","reducer","newState","isLoggedIn","auth","rootReducer","combineReducers","store","createStore","composeWithDevTools","applyMiddleware","thunk","App","ReactDOM","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.05c7d994.chunk.js","sourcesContent":["import React from 'react'\nimport \"./topbar.css\"\n\nimport { NotificationsNone, Language, Settings } from '@mui/icons-material';\nimport { Link } from 'react-router-dom';\n\nexport default function Topbar() {\n    return (\n        <div className=\"topbar\">\n            <div className=\"topbarWrapper\">\n                <Link to=\"/files/grid\">\n                    <div className=\"topLeft\">\n                        <span className=\"logo\">Files Dashboard</span>\n                    </div>\n                </Link>\n                <div className=\"topRight\">\n                    <div className=\"topbarIconContainer\">\n                        <NotificationsNone/>\n                        <span className=\"topIconBadge\">2</span>\n                    </div>\n                    <div className=\"topbarIconContainer\">\n                        <Language/>\n                        <span className=\"topIconBadge\">3</span>\n                    </div>\n                    <Link to=\"/settings/server\">\n                        <div className=\"topbarIconContainer\">\n                            <Settings/>\n                        </div>\n                    </Link>\n                    <img src=\"https://i.picsum.photos/id/1027/2848/4272.jpg?hmac=EAR-f6uEqI1iZJjB6-NzoZTnmaX0oI0th3z8Y78UpKM\" alt=\"\" className=\"topAvatar\" />\n                </div>\n            </div>\n        </div>\n    )\n}\n","import React from 'react'\nimport \"./settingsSidebar.css\"\nimport { ChromeReaderMode } from '@mui/icons-material';\nimport {Link} from 'react-router-dom';\n\nfunction SettingsSidebar() {\n    return (\n        <div className=\"settingsSidebar\">\n            <div className=\"others\">\n                <div className=\"sidebarWrapper\">\n                    <div className=\"sidebarMenu\">\n                        <h3 className=\"sidebarTitle\">Settings</h3>\n                        <ul className=\"sidebarList\">                     \n                            <Link to=\"/settings/server\">    \n                                <li className=\"sidebarListItem\">\n                                    <ChromeReaderMode className=\"sidebarIcon\"/>\n                                    Server\n                                </li>\n                            </Link>\n                        </ul>\n                    </div>\n                </div>\n            </div>\n        </div>\n    )\n}\n\nexport default SettingsSidebar\n","import \"./dashboardSidebar.css\"\nimport { TrendingUp, AttachFile, GridOn, Equalizer } from '@mui/icons-material';\nimport {Link} from 'react-router-dom';\n\n\nexport default function DashboardSidebar() {\n    return (\n        <div className=\"dashboardSidebar\">\n            <div className=\"others\">\n                <div className=\"sidebarWrapper\">\n                    <div className=\"sidebarMenu\">\n                        <h3 className=\"sidebarTitle\">Import</h3>\n                        <ul className=\"sidebarList\">\n                            <Link to=\"/files/grid\">    \n                                <li className=\"sidebarListItem\">\n                                    <GridOn className=\"sidebarIcon\"/>\n                                    Document Files\n                                </li>\n                            </Link>\n                            {/* <Link to=\"/files/child.jpeg\">    \n                                <li className=\"sidebarListItem\">\n                                    <TrendingUp className=\"sidebarIcon\"/>\n                                    File Preview\n                                </li>\n                            </Link> */}\n                        </ul>\n                    </div>\n\n                    <div className=\"sidebarMenu\">\n                        <h3 className=\"sidebarTitle\">Documents</h3>\n                        <ul className=\"sidebarList\">\n                            <Link to=\"/files/dashboard\">\n                                <li className=\"sidebarListItem\">\n                                    <AttachFile className=\"sidebarIcon\"/>\n                                    Contract Notes\n                                </li>\n                            </Link>\n                            <Link to=\"/files/dashboard\">\n                                <li className=\"sidebarListItem\">\n                                    <AttachFile className=\"sidebarIcon\"/>\n                                    Financial Ledger\n                                </li>\n                            </Link>\n                        </ul>\n                    </div>\n\n                    <div className=\"sidebarMenu\">\n                        <h3 className=\"sidebarTitle\">Portfolio</h3>\n                        <ul className=\"sidebarList\">    \n                            <Link to=\"/portfolio/transactions\">\n                                <li className=\"sidebarListItem\">\n                                    <Equalizer className=\"sidebarIcon\"/>\n                                    Transactions\n                                </li>\n                            </Link>                    \n                            <Link to=\"/portfolio/positions\">\n                                <li className=\"sidebarListItem\">\n                                    <TrendingUp className=\"sidebarIcon\"/>\n                                    Profit & Loss\n                                </li>\n                            </Link>\n                            <Link to=\"/portfolio/openpositions\">\n                                <li className=\"sidebarListItem\">\n                                    <TrendingUp className=\"sidebarIcon\"/>\n                                    Portfolio\n                                </li>\n                            </Link>\n                        </ul>\n                    </div>\n\n                    <div className=\"sidebarMenu\">\n                        <h3 className=\"sidebarTitle\">Contract Notes</h3>\n                        <ul className=\"sidebarList\">\n                            <Link to=\"/financial/invoices\">\n                                <li className=\"sidebarListItem\">\n                                    <Equalizer className=\"sidebarIcon\"/>\n                                    List\n                                </li>\n                            </Link>\n                            <Link to=\"/financial/invoices\">\n                                <li className=\"sidebarListItem\">\n                                    <Equalizer className=\"sidebarIcon\"/>\n                                    Trade Transactions\n                                </li>\n                            </Link>\n                            <Link to=\"/financial/invoices\">\n                                <li className=\"sidebarListItem\">\n                                    <TrendingUp className=\"sidebarIcon\"/>\n                                    Brokerage\n                                </li>\n                            </Link>\n                            <Link to=\"/financial/invoices\">\n                                <li className=\"sidebarListItem\">\n                                    <TrendingUp className=\"sidebarIcon\"/>\n                                    Expenses\n                                </li>\n                            </Link>\n                        </ul>\n                    </div>\n\n                    <div className=\"sidebarMenu\">\n                        <h3 className=\"sidebarTitle\">Financial Ledger</h3>\n                        <ul className=\"sidebarList\">\n                            <Link to=\"/financial/transactions\">\n                                <li className=\"sidebarListItem\">\n                                    <Equalizer className=\"sidebarIcon\"/>\n                                    CN Transfers\n                                </li>\n                            </Link>\n                            <Link to=\"/financial/transactions\">\n                                <li className=\"sidebarListItem\">\n                                    <TrendingUp className=\"sidebarIcon\"/>\n                                    Expenses\n                                </li>\n                            </Link>\n                            <Link to=\"/financial/transactions\">\n                                <li className=\"sidebarListItem\">\n                                    <TrendingUp className=\"sidebarIcon\"/>\n                                    Bank Transfers\n                                </li>\n                            </Link>\n                            <Link to=\"/financial/transactions\">\n                                <li className=\"sidebarListItem\">\n                                    <TrendingUp className=\"sidebarIcon\"/>\n                                    Margin Transfers\n                                </li>\n                            </Link>\n                        </ul>\n                    </div>\n                </div>\n            </div>\n        </div>\n    )\n}\n","import React from 'react';\nimport \"./sidebar.css\";\nimport SettingsSidebar from './settings/SettingsSidebar';\nimport DashboardSidebar from './dashboard/DashboardSidebar';\nimport {Switch, Route} from 'react-router-dom';\n\nfunction Sidebar() {\n    return (\n        <div className=\"sidebar\">\n            <Switch>\n                <Route path=\"/settings\">\n                    <SettingsSidebar />\n                </Route>\n                <Route path=\"*\">\n                    <DashboardSidebar />\n                </Route>\n            </Switch>\n        </div>\n    )\n}\n\nexport default Sidebar\n","import \"./chart.css\";\nimport { LineChart, Line, XAxis, YAxis, CartesianGrid, Tooltip, Legend, ResponsiveContainer } from 'recharts';\n\n\nexport default function Chart({title, data, dataKey, grid}) {\n\n    return (\n        <div className=\"chart\">\n            <h3 className=\"chartTitle\">{title}</h3>\n            <ResponsiveContainer width=\"100%\" aspect={4 / 1}>\n                <LineChart data={data}>\n                    <XAxis dataKey=\"name\" stroke=\"#5550bd\"/>\n                    <YAxis />\n                    <Line type=\"monotone\" dataKey={dataKey} stroke=\"#5550bd\"/>\n                    <Tooltip/>\n                    {grid && <CartesianGrid stroke=\"#e0dfdf\" strokeDasharray=\"5 5\"/>}\n                    <Legend/>\n\n                </LineChart>\n            </ResponsiveContainer>\n        </div>\n    )\n}\n","import \"./featuredInfo.css\";\nimport { ArrowDownward, ArrowUpward } from '@mui/icons-material';\n\nexport default function FeaturedInfo() {\n    return (\n        <div className=\"featured\">\n            <div className=\"featuredItem\">\n                <span className=\"featuredTitle\">Accounts</span>\n                <div className=\"featuredMoneyContainer\">\n                    <span className=\"featuredMoney\">8</span>\n                    <span className=\"featuredMoneyRate\">\n                        -11.4\n                        <ArrowDownward className=\"featuredIcon negative\"/>\n                    </span>\n                </div>\n                <span className=\"featuredSub\">Compared to last month</span>\n            </div>\n            <div className=\"featuredItem\">\n                <span className=\"featuredTitle\">Statements</span>\n                <div className=\"featuredMoneyContainer\">\n                    <span className=\"featuredMoney\">102</span>\n                    <span className=\"featuredMoneyRate\">\n                        -1.4\n                        <ArrowDownward  className=\"featuredIcon negative\"/>\n                    </span>\n                </div>\n                <span className=\"featuredSub\">Compared to last month</span>\n            </div>\n            <div className=\"featuredItem\">\n                <span className=\"featuredTitle\">Transactions</span>\n                <div className=\"featuredMoneyContainer\">\n                    <span className=\"featuredMoney\">430</span>\n                    <span className=\"featuredMoneyRate\">\n                        5.4\n                        <ArrowUpward  className=\"featuredIcon\"/>\n                    </span>\n                </div>\n                <span className=\"featuredSub\">Compared to last month</span>\n            </div>\n        </div>\n    )\n}\n","export const userData = [\n    {\n      name: 'Jan',\n      \"Active Users\": 4000,\n    },\n    {\n      name: 'Feb',\n      \"Active Users\": 3000,\n    },\n    {\n      name: 'Mar',\n      \"Active Users\": 2000,\n    },\n    {\n      name: 'Apr',\n      \"Active Users\": 2780,\n    },\n    {\n      name: 'May',\n      \"Active Users\": 1890,\n    },\n    {\n      name: 'Jun',\n      \"Active Users\": 2390,\n    },\n    {\n      name: 'Jul',\n      \"Active Users\": 3490,\n    },\n    {\n        name: 'Aug',\n        \"Active Users\": 4000,\n        },\n        {\n        name: 'Sep',\n        \"Active Users\": 3000,\n        },\n        {\n        name: 'Oct',\n        \"Active Users\": 5000,\n        },\n        {\n        name: 'Nov',\n        \"Active Users\": 6000,\n        },\n        {\n        name: 'Dec',\n        \"Active Users\": 7000,\n        },\n  ];\n  \n  export const userImageUrl = \"https://i.picsum.photos/id/1027/2848/4272.jpg?hmac=EAR-f6uEqI1iZJjB6-NzoZTnmaX0oI0th3z8Y78UpKM\";\n\n\n  export const userRows = [\n    { \n        id: 1, \n        username: 'Jon Snow', \n        avatar: userImageUrl, \n        email: \"jon@gmail.com\",\n        status: \"active\",\n        transaction: \"$120\"\n    },\n    { \n        id: 2, \n        username: 'Jon Snow', \n        avatar: userImageUrl, \n        email: \"jon@gmail.com\",\n        status: \"active\",\n        transaction: \"$120\"\n    },\n    { \n        id: 3, \n        username: 'Jon Snow', \n        avatar: userImageUrl, \n        email: \"jon@gmail.com\",\n        status: \"active\",\n        transaction: \"$120\"\n    },\n    { \n        id: 4, \n        username: 'Jon Snow', \n        avatar: userImageUrl, \n        email: \"jon@gmail.com\",\n        status: \"active\",\n        transaction: \"$120\"\n    },\n    { \n        id: 5, \n        username: 'Jon Snow', \n        avatar: userImageUrl, \n        email: \"jon@gmail.com\",\n        status: \"active\",\n        transaction: \"$120\"\n    },\n    { \n        id: 6, \n        username: 'Jon Snow', \n        avatar: userImageUrl, \n        email: \"jon@gmail.com\",\n        status: \"active\",\n        transaction: \"$120\"\n    },\n    { \n        id: 7, \n        username: 'Jon Snow', \n        avatar: userImageUrl, \n        email: \"jon@gmail.com\",\n        status: \"active\",\n        transaction: \"$120\"\n    },\n    { \n        id: 8, \n        username: 'Jon Snow', \n        avatar: userImageUrl, \n        email: \"jon@gmail.com\",\n        status: \"active\",\n        transaction: \"$120\"\n    },\n    { \n        id: 9, \n        username: 'Jon Snow', \n        avatar: userImageUrl, \n        email: \"jon@gmail.com\",\n        status: \"active\",\n        transaction: \"$120\"\n    },\n    { \n        id: 10, \n        username: 'Jon Snow', \n        avatar: userImageUrl, \n        email: \"jon@gmail.com\",\n        status: \"active\",\n        transaction: \"$120\"\n    },\n    { \n        id: 11, \n        username: 'Jon Snow', \n        avatar: userImageUrl, \n        email: \"jon@gmail.com\",\n        status: \"active\",\n        transaction: \"$120\"\n    },\n    { \n        id: 12, \n        username: 'Jon Snow', \n        avatar: userImageUrl, \n        email: \"jon@gmail.com\",\n        status: \"active\",\n        transaction: \"$120\"\n    },\n  ];\n  \n  export const productImageUrl = \"https://i.gadgets360cdn.com/large/apple_airpods_3rd_generation_image_1634579538152.jpg?downsize=950:*\";\n\n  export const productRows = [\n    { \n        id: 1, \n        name: 'Apple Airpods', \n        image: productImageUrl, \n        stock: 123,\n        status: \"active\",\n        price: \"$120\"\n    },\n    { \n      id: 2, \n      name: 'Apple Airpods', \n      image: productImageUrl, \n      stock: 123,\n      status: \"active\",\n      price: \"$120\"\n    },\n  ];\n  \n\n  export const productData = [\n    {\n      name: 'Jan',\n      \"Sales\": 2000,\n    },\n    {\n      name: 'Feb',\n      \"Sales\": 3000,\n    },\n    {\n      name: 'Mar',\n      \"Sales\": 4000,\n    },\n  ];\n\n  var baseId = 1000\n\n  export const generateId = () => {\n    return baseId++\n  }","export const ADD_RESOURCE = \"ADD_RESOURCE\"\nexport const UPDATE_RESOURCE = \"UPDATE_RESOURCE\"\nexport const REMOVE_RESOURCE = \"REMOVE_RESOURCE\"\nexport const SET_RESOURCES = \"SET_RESOURCES\"\nexport const SET_CURRENT_RESOURCE = \"SET_CURRENT_RESOURCE\"\n","import { ADD_RESOURCE, UPDATE_RESOURCE, REMOVE_RESOURCE, SET_RESOURCES, SET_CURRENT_RESOURCE } from \"./resourceAction.types\";\nimport axios from 'axios'\n\n\nconst addResource = (resType, resource) => {\n    return {\n        type: ADD_RESOURCE,\n        payload: {\n            resType,\n            resource\n        }\n    }\n}\n\nconst updateResource = (resType, id, update) => {\n    return {\n        type: UPDATE_RESOURCE,\n        payload: {\n            resType,\n            id,\n            update\n        }\n    }\n}\n\nconst removeResource = (resType, resourceId) => {\n    return {\n        type: REMOVE_RESOURCE,\n        payload: {\n            resType,\n            id: resourceId\n        }\n    }\n}\n\nconst setResources = (resType, resources) => {\n    return {\n        type: SET_RESOURCES,\n        payload: {\n            resType,\n            resources\n        }\n    }\n}\n\nconst setCurrentResource = (resType, link) => {\n    return {\n        type: SET_CURRENT_RESOURCE,\n        payload: {\n            resType,\n            link\n        }\n    }\n}\n\nexport const uploadResourceAsyncMock = (resType, resource) => {\n    var counter = 0\n\n    return (dispatch) => {\n        dispatch(addResource(resType, resource))\n\n        const timer = setInterval(() => {\n            ++counter;\n            dispatch(updateResource(resType, resource.id, {completed: counter * 10}))\n\n            // Time stop condition\n            if (counter >= 10) {\n                // counter = 0;\n                clearInterval(timer)\n\n                setTimeout(() => {\n                    dispatch(updateResource(resType, resource.id, {uploaded: true}))\n                }, 10)\n            }\n        }, 200)\n    }\n}\n\nexport const updateResourceAsyncMock = (resType, id, update) => {\n    return (dispatch) => {\n        dispatch(updateResource(resType, id, update))\n    }\n}\n\nexport const removeResourceAsyncMock = (resType, resourceId) => {\n    return (dispatch) => {\n        dispatch(removeResource(resType, resourceId))\n    }\n}\n\nexport const addResourceAsync = (resType, resource) => {\n    return (dispatch) => {\n        dispatch(addResource(resType, resource))\n    }\n}\n\nexport const uploadResourceAsync = (resType, fileObj, formData, action) => {\n    console.log(\"formData:\", formData)\n\n    return (dispatch, getState) => {\n        let uploadUrl = `${getState().configReducer.server[resType]}/`;\n        if (action) {\n            uploadUrl += `${action}/`\n        }\n\n        axios.post(\n            uploadUrl,\n            formData,\n            { \n              headers: {\n                'Authorization': `${getState().authReducer.token_title} ${getState().authReducer.token}`\n              },\n              onUploadProgress: progress => {\n                const completedPercent = Math.round((progress.loaded / fileObj.size) * 100)\n                dispatch(updateResource(resType, fileObj.id, {completed: completedPercent}))\n              }\n            }\n          )\n          .then(response => {\n            const addedResource = response.data\n\n            dispatch(updateResource(resType, fileObj.id, {\n                id: addedResource.id,\n                file: addedResource.file,\n                size: addedResource.size,\n                uploaded: true\n            }\n            ))\n          })\n          .catch(error => {\n            console.log(error)\n          })\n    }\n}\n\n\n// Not used so far we plan to use it for resource name change etc\nexport const updateResourceAsync = (resType, id, update) => {\n    return (dispatch) => {\n        dispatch(updateResource(resType, id, update))\n    }\n}\n\nexport const removeResourceAsync = (resType, resource) => {\n\n    return (dispatch, getState) => {\n        // Send request to server only if we have the path on the server\n        // In case we do not have path on server that means resource is present locally\n        if (resource.uploaded) {\n            axios.delete(\n                `${getState().configReducer.server[resType]}/${resource.id}/`,\n                {\n                    headers: {\n                        'Authorization': `${getState().authReducer.token_title} ${getState().authReducer.token}`\n                    }\n                }\n            )\n            .then(response => {\n                // console.log(response)\n                dispatch(removeResource(resType, resource.id))\n            })\n            .catch(error => {\n                // console.log(error)\n                if (error.response && error.response.status === 404) {\n                    dispatch(removeResource(resType, resource.id))\n                }\n            })  \n        } else {\n            dispatch(removeResource(resType, resource.id))\n        }\n    }\n}\n\n\n\nexport const fetchResourcesAsync = (resType, params) => {\n    // We are accessing state in action creater to get server url\n    return (dispatch, getState) => {\n        const url = `${getState().configReducer.server[resType]}/`\n        console.log('url:', url)\n\n        axios.get(\n            url,\n            {\n                params,\n                headers: {\n                    'Authorization': `${getState().authReducer.token_title} ${getState().authReducer.token}`\n                }\n            }\n        )\n        .then(response => {\n            // console.log(response);\n            var resources;\n            if('resources' in response.data) {\n                // Response from flask\n                resources = response.data.resources ? response.data.resources : []\n            } else {\n                // Response from django\n                resources = response.data ? response.data : []\n            }\n\n            // resources.forEach(resource => console.log(resource))\n            console.log(\"resources.length=\", resources.length)\n            resources = resources.map(resource => {resource['uploaded'] = true; return resource;})\n            dispatch(setResources(resType, resources))\n        })\n        .catch(error => {\n            console.log(error)\n        })\n    }\n}\n\n\nexport const downloadResourcesAsyncWithAccept = (resType, params) => {\n    // We are accessing state in action creator to get server url\n    return (dispatch, getState) => {\n        axios.get(\n            `${getState().configReducer.server[resType]}/`,\n            {\n                params,\n                headers: {\n                    'Authorization': `${getState().authReducer.token_title} ${getState().authReducer.token}`,\n                    'Accept': 'application/xlsx',\n                },\n                responseType:'blob'\n            }\n        )\n            .then((response) => {\n                console.log(\"downloadResourcesAsyncWithAccept():\", response.data)\n                return response.data;\n            })\n            .then((blob) => {\n                const url = window.URL.createObjectURL(new Blob([blob]));\n                const link = document.createElement('a');\n                link.href = url;\n                link.setAttribute('download', params.filename);\n\n                // Append to html page\n                document.body.appendChild(link);\n                // Force download\n                link.click();\n                // Clean up and remove the link\n                link.parentNode.removeChild(link);\n            })\n            .catch(error => {\n                console.log(error)\n            })\n    }\n}\n\n\nexport const downloadResourcesAsync = (resType, params, action) => {\n    // We are accessing state in action creator to get server url\n    return (dispatch, getState) => {\n        let downloadUrl = `${getState().configReducer.server[resType]}/`;\n        if (action) {\n            downloadUrl += `${action}/`\n        }\n\n        axios.get(\n            downloadUrl,\n            {\n                params,\n                headers: {\n                    'Authorization': `${getState().authReducer.token_title} ${getState().authReducer.token}`\n                },\n                responseType:'blob'\n            }\n        )\n            .then((response) => {\n                console.log(\"downloadResourcesAsync():\", response.data)\n                return response.data;\n            })\n            .then((blob) => {\n                const url = window.URL.createObjectURL(new Blob([blob]));\n                const link = document.createElement('a');\n                link.href = url;\n                link.setAttribute('download', params.filename);\n\n                // Append to html page\n                document.body.appendChild(link);\n                // Force download\n                link.click();\n                // Clean up and remove the link\n                link.parentNode.removeChild(link);\n            })\n            .catch(error => {\n                console.log(error)\n            })\n    }\n}\n\n\nexport const actionResourcesAsync = (resType, action, params) => {\n    // We are accessing state in action creater to get server url\n    return (dispatch, getState) => {\n        axios.get(\n            `${getState().configReducer.server[resType]}/${action}`,\n            {\n                params,\n                headers: {\n                    'Authorization': `${getState().authReducer.token_title} ${getState().authReducer.token}`\n                }\n            }\n        )\n            .then(response => {\n                console.log(response);\n            })\n            .catch(error => {\n                console.log(error)\n            })\n    }\n}\n\n\nexport const setCurrentResourceAsync = (resType, link) => {\n    // console.log(\"setCurrentResourceAsync\", link)\n    return (dispatch) => {\n        dispatch(setCurrentResource(resType, link))\n    }\n}","export const ADD_CONFIG = \"ADD_CONFIG\"\nexport const UPDATE_CONFIG = \"UPDATE_CONFIG\"\nexport const REMOVE_CONFIG = \"REMOVE_CONFIG\"","import { ADD_CONFIG, UPDATE_CONFIG, REMOVE_CONFIG } from \"./configAction.types\"; \n\nconst addConfig = (key, value) => {\n    return {\n        type: ADD_CONFIG,\n        payload: {\n            key,\n            value\n        }\n    }\n}\n\nconst updateConfig = (key, value) => {\n    return {\n        type: UPDATE_CONFIG,\n        payload: {\n            key,\n            value\n        }\n    }\n}\n\nconst removeConfig = (key) => {\n    return {\n        type: REMOVE_CONFIG,\n        payload: {\n            key\n        }\n    }\n}\n\nexport const addConfigAsync = (key, value) => {\n    return (dispatch) => {\n        dispatch(addConfig(key, value))\n    }\n}\n\n\nexport const updateConfigAsync = (key, value) => {\n    return (dispatch) => {\n        dispatch(updateConfig(key, value))\n    }\n}\n\n\nexport const removeConfigAsync = (key, value) => {\n    return (dispatch) => {\n        dispatch(removeConfig(key, value))\n    }\n}\n\n","export const SET_TOKEN = \"SET_TOKEN\"\nexport const CLEAR_TOKEN = \"CLEAR_TOKEN\"","import { SET_TOKEN, CLEAR_TOKEN } from \"./authAction.types\";\n\nconst setToken = (token) => {\n    return {\n        type: SET_TOKEN,\n        payload: {\n            token\n        }\n    }\n}\n\nconst clearToken = () => {\n    return {\n        type: CLEAR_TOKEN,\n        payload: {}\n    }\n}\n\nexport const setTokenAsync = (token) => {\n    return (dispatch) => {\n        dispatch(setToken(token))\n    }\n}\n\nexport const clearTokenAsync = () => {\n    return (dispatch) => {\n        dispatch(clearToken())\n    }\n}\n","import * as XLSX from 'xlsx'; \nimport axios from 'axios'\n\nconst converExcelWbToJson = (wb) => {\n    const sheetMap = {}\n\n    wb.SheetNames.forEach(ws => {\n            const rows = XLSX.utils.sheet_to_row_object_array(wb.Sheets[ws]);\n            // console.log(ws)\n            sheetMap[ws] = rows\n    });\n\n    return sheetMap;\n}\n\n// When we want to read a file selected from input tag\nexport const readExcelFile = file => {\n    return new Promise( (resolve, reject) => {\n        const fileReader = new FileReader();\n        \n        fileReader.onload = (e) => {\n        const data = e.target.result;\n        const wb = XLSX.read(data, {type: 'array'})\n\n        const sheetMap = converExcelWbToJson(wb)\n        resolve(sheetMap)\n        };\n\n        fileReader.onerror = (error => {\n        reject(error);\n        });\n\n        fileReader.readAsArrayBuffer(file)\n    })\n\n}\n\n// When we want to read a file from its url\nexport const readExcelUrlAsync = fileUrl => {\n    // console.log(\"readExcelUrlAsync: \", fileUrl);\n\n    return new Promise((resolve, reject) => {\n        axios.request({\n            url: fileUrl,\n            method: 'GET',\n            responseType:'blob' // This is important part\n          })\n          .then(response => {\n            readExcelFile(response.data)\n            .then(inner => {\n                resolve(inner)\n            })\n            .catch(error => {\n                console.log(error)\n            })\n          })\n          .catch(error => {\n            console.log(error)\n            reject(error);\n          })\n    \n    })\n}\n\n\nexport const downloadExcel = (downloadUrl, authToken, fileName) => {\n\n    axios.request({\n        url:downloadUrl,\n        method: 'GET',\n        headers: {\n            'Accept': 'application/xlsx',\n            'Authorization': `token ${authToken}`,\n        },\n        responseType:'blob'\n    })\n    .then((response) => {\n        console.log(\"downloadExcel():\", response.data)\n        return response.data;\n    })\n    .then((blob) => {\n        const url = window.URL.createObjectURL(new Blob([blob]));\n        const link = document.createElement('a');\n        link.href = url;\n        link.setAttribute('download', fileName);\n        \n        // Append to html page\n        document.body.appendChild(link);\n        // Force download\n        link.click();\n        // Clean up and remove the link\n        link.parentNode.removeChild(link);\n    })\n\n}","import React from 'react'\nimport \"./resourceListItem.css\"\nimport { CalendarViewMonth, Delete, PictureAsPdfRounded, TextFormat, FileDownload } from '@mui/icons-material';\nimport {connect} from 'react-redux';\nimport { removeResourceAsync, setCurrentResourceAsync } from '../../../redux';\nimport { downloadExcel } from \"../../../helpers/spreadsheet\";\n\nfunction ResourceListItem({rItem, removeResourceAsync, setCurrentResourceAsync}) {\n    const resType = 'files';\n\n    const onResourceDelete = () => {\n        // console.log(\"onResourceDelete: id=\", rItem.id)\n        removeResourceAsync(resType, rItem)\n    }\n\n    const onResourcePreviewClick = (link) => {\n        // console.log(rItem, link)\n        setCurrentResourceAsync(resType, link)\n    }\n\n    const onResourceDownloadClick = (rItem) => {\n        console.log(\"onItemClick(): Click\", rItem.ssFile);\n\n        downloadExcel(\n            // 'http://localhost:8000/api/document/ingredients/',\n            rItem.ssFile,\n            'c716a72bcc515535eecec695f067fc5b591d1d27',\n            'trades.xlsx'\n        )\n    }\n\n    return (\n        <li className=\"resourceListItem\" id={rItem.id}>\n            {/* <ChromeReaderMode  className=\"sidebarIcon\"/> */}\n            <div className=\"widgetSmallUserTop\">\n                <span className=\"widgetSmallUsername\">{rItem.title}</span>\n            </div>\n            <div className=\"widgetSmallUserBottom\">\n                <div className=\"resourceInfo\">\n                <span className=\"widgetSmallUserTitle\">{rItem.size}</span>\n                <span className=\"widgetSmallId\">{rItem.id}</span>\n                </div>\n                <div className=\"resourceButtonsGroup\">\n                    <div className=\"widgetSmallIcon\" onClick={() => onResourcePreviewClick(rItem.file)}>\n                        <PictureAsPdfRounded />\n                    </div>\n                    <div className=\"widgetSmallIcon\" onClick={() => onResourcePreviewClick(rItem.textFile)}>\n                        <TextFormat/>\n                    </div>                    \n                    <div className=\"widgetSmallIcon\" onClick={() => onResourcePreviewClick(rItem.ssFile)}>\n                        <CalendarViewMonth/>\n                    </div>\n                    <div className=\"widgetSmallIcon\" onClick={() => onResourceDownloadClick(rItem)}>\n                        <FileDownload/>\n                    </div>\n                </div>\n                <Delete className=\"resourceDeleteButton\" onClick={onResourceDelete}/>\n            </div>\n        </li>            \n    )\n}\n\nconst mapDispatchToProps = (dispatch) => {\n    return {\n        removeResourceAsync: (resType, file) => dispatch(removeResourceAsync(resType, file)),\n        setCurrentResourceAsync: (resType, file) => dispatch(setCurrentResourceAsync(resType, file))\n    }\n}\n\nexport default connect(null, mapDispatchToProps)(ResourceListItem)\n","import React from 'react'\nimport \"./resourceList.css\"\n\nimport ResourceListItem from './ResourceListItem';\n\nfunction ResourceList({rList}) {\n    return (    \n        <ul className=\"resourceList\">\n            {rList && \n                rList.map(rItem => \n                    <ResourceListItem key={rItem.id} rItem={rItem}/>\n                ) \n            }\n        </ul>           \n    )\n}\n\nexport default ResourceList\n","import React from 'react'\nimport \"./resourceDisplay.css\"\n\n\nimport {connect} from 'react-redux'\nimport ResourceList from './ResourceList';\n\nfunction ResourceDisplay({files}) {\n    return (\n        <div className=\"resourceDisplay\">\n            <span className=\"widgetSmallTitle\">Files</span>\n            <ResourceList rList={files}/>\n        </div>\n    )\n}\n\n\nconst mapStateToProps = state => {\n    return {\n        files: state.resourceReducer.files\n    }\n}\n\nexport default connect(mapStateToProps)(ResourceDisplay)\n","import React from 'react'\n\nfunction ImagePreview({src}) {\n    return (\n        <img className=\"previewContent\" src={src} alt='' />\n    )\n}\n\nexport default ImagePreview\n","import {generateId} from \"../dummyData\";\n\nconst image_extensions = ['jpeg', 'jpg', 'png']\nconst pdf_extensions = ['pdf']\nconst text_extensions = ['txt', 'text', 'sh', 'cmd', 'log', 'js', 'html', 'py', 'java']\nconst spreadsheet_extensions = ['xls', 'xlsx', 'csv']\n\nconst checkFileExtn = (filename, extensions) => {\n    if (filename) {\n        const parts = filename.split(\".\")\n        \n        return (parts \n            && (parts.length > 1) \n            && (extensions.includes(parts[parts.length - 1]))\n        )\n    }\n\n    return false\n}\n\nexport const isImage = filename => {\n    return checkFileExtn(filename, image_extensions)\n} \n\nexport const isPdf = filename => {\n    return checkFileExtn(filename, pdf_extensions)\n} \n\nexport const isText = filename => {\n    return checkFileExtn(filename, text_extensions)\n}\n\nexport const isSpreadsheet = filename => {\n    return checkFileExtn(filename, spreadsheet_extensions)\n}\n\nexport const createFileObj = (selectedFile) => {\n    return {\n        id: generateId(),\n        title: selectedFile.name,\n        size: selectedFile.size,\n        selectedFile\n    };\n}","import React, { useState } from \"react\";\nimport \"./pdfPreview.css\"\nimport { Document, Page, pdfjs } from \"react-pdf\";\n\nfunction PdfPreview({ url, onLoad }) {\n  pdfjs.GlobalWorkerOptions.workerSrc = `//cdnjs.cloudflare.com/ajax/libs/pdf.js/${pdfjs.version}/pdf.worker.js`;\n  const [numPages, setNumPages] = useState(null);\n  const [pageNumber, setPageNumber] = useState(1);\n\n  /*To Prevent right click on screen*/\n  // document.addEventListener(\"contextmenu\", (event) => {\n  //   event.preventDefault();\n  // });\n\n  /*When document gets loaded successfully*/\n  function onDocumentLoadSuccess({ numPages }) {\n    setNumPages(numPages);\n    setPageNumber(1);\n    onLoad();\n  }\n\n  function changePage(offset) {\n    setPageNumber((prevPageNumber) => prevPageNumber + offset);\n  }\n\n  function previousPage() {\n    changePage(-1);\n  }\n\n  function nextPage() {\n    changePage(1);\n  }\n\n  return (\n    <>\n      <div className=\"main\">\n        <div className=\"inner\">\n          <Document file={url} onLoadSuccess={onDocumentLoadSuccess}>\n            <div style={{ display: \"inline-block\" }}>\n              <Page pageNumber={pageNumber} />\n            </div>\n          </Document>\n        </div>\n        <div className=\"margin\" style={{ marginBottom: \"10px\" }} />\n        <div style={{ display: \"inline-block\" }}>\n          <div className=\"pagec\">\n            Page {pageNumber || (numPages ? 1 : \"--\")} of {numPages || \"--\"}\n          </div>\n          <div className=\"margin\" style={{ marginBottom: \"10px\" }} />\n          <div className=\"buttonc\">\n            <button\n              type=\"button\"\n              disabled={pageNumber <= 1}\n              onClick={previousPage}\n              className=\"Pre\"\n            >\n              Previous\n            </button>\n            <div\n              className=\"margin\"\n              style={{ display: \"inline-block\", marginRight: \"20px\" }}\n            />\n            <button\n              type=\"button\"\n              disabled={pageNumber >= numPages}\n              onClick={nextPage}\n            >\n              Next\n            </button>\n          </div>\n        </div>\n      </div>\n    </>\n  );\n}\n\nexport default PdfPreview\n","import React from \"react\";\nimport { css } from \"@emotion/css\";\n\nfunction TextAreaCustom(props) {\n  return (\n    <textarea\n      {...props}\n      className={css`\n        width: 96%;\n        margin-top: 20px;\n        border-radius: 5px;\n        padding: 5px;\n        // font-family: \"Times New Roman\", Times, serif;\n        font-size: 15px;\n        // Enable scroll and prevent text wrapping\n        overflow-y: scroll;\n        white-space: pre;\n        overflow-wrap: normal;\n        overflow-x: scroll;\n      `}\n    />\n  );\n}\n\nexport default TextAreaCustom;","import React, {useState} from 'react'\nimport { getUrlContentsAsync } from '../../../../../../helpers/urls'\nimport TextAreaCustom from '../../../../../common/textArea/TextAreaCustom'\nimport \"./textPreview.css\"\n\n\nfunction TextPreview({url}) {\n    const [text, setText] = useState('Blank')\n    getUrlContentsAsync(url).then(contents => {\n        setText(contents)\n    })    \n\n    return (\n        <div className=\"textPreview\">\n            <TextAreaCustom className=\"textArea\" disabled rows=\"600\" cols=\"80\" value={text} />  \n        </div>\n    )\n}\n\nexport default TextPreview\n","import axios from 'axios'\n\nexport const getUrlContentsAsync = url => {\n    return new Promise( resolve => {\n        axios.get(url)\n        .then(response => {\n            // console.log(response.data)\n            resolve(response.data)\n        })\n    })\n}","import { format } from 'date-fns';\n\n\nexport const defaultFormat = 'dd-MM-yyyy';\n\nexport const jsToExcelDate = function (inDate) {\n    const returnDateTime = 25569.0 + ((inDate.getTime() - (inDate.getTimezoneOffset() * 60 * 1000)) / (1000 * 60 * 60 * 24));\n    return returnDateTime.toString().substr(0,5);\n\n}\n\nexport const excelToJSDate = function(date) {\n    return new Date(Math.round((date - 25569)*86400*1000));\n}\n\nexport const jsDateToString = function (date) {\n    return format(date, defaultFormat)\n}\n\nexport const jsDateToStringFormat = function (date, format) {\n    return format(date, format)\n}\n\nexport const dateFormatter = function (dateStr, format) {\n    const d = new Date(dateStr)\n\n    let formattedDate;\n    if (format) {\n        formattedDate = jsDateToStringFormat(d, format)\n    } else {\n        formattedDate = jsDateToString(d)\n    }\n\n    return formattedDate;\n}","import React, { useEffect, useState} from 'react'\nimport \"./ssReactTable.css\"\nimport { useTable } from 'react-table';\nimport {excelToJSDate} from '../../../../../../helpers/date';\n\n\nfunction SSReactTable({data, title}) {\n    const [columns, setColumns] = useState([])\n\n    const generateReactTableColumns = row => {\n        const colArray = [];\n        Object.keys(row).forEach(key => {\n            colArray.push({\n                Header: key,\n                accessor: key\n            })\n        })\n        // console.log('colArray:', colArray);\n        return colArray\n    }\n\n    useEffect(() => {\n        if (data.length > 0) {\n            const firstRow = data[0]\n            if ('transactionDate' in firstRow) {\n                data = data.map(item => {\n                    if (typeof(item['transactionDate']) === 'number') {\n                        const dateStr = excelToJSDate(item['transactionDate']).toISOString().split('T')[0]\n                        item['transactionDate'] = dateStr;\n                    }\n                    return item\n                });\n            }\n\n            setColumns(generateReactTableColumns(firstRow));\n        }\n\n        return () => {\n            // console.log('SSReactTable: Clean up called')\n        }\n    }, [data]);\n    \n    const {\n        getTableProps,\n        getTableBodyProps,\n        headerGroups,\n        rows,\n        prepareRow,\n    } = useTable({ columns, data })\n    \n    return (\n        <div className=\"ssReactTableContainer\">\n            <div className=\"ssReactTableTitle\">{title}</div>\n            <table {...getTableProps()} className=\"ssReactTable\" >\n            <thead>\n                {headerGroups.map(headerGroup => (\n                <tr {...headerGroup.getHeaderGroupProps()}>\n                    {headerGroup.headers.map(column => (\n                    <th {...column.getHeaderProps()} className=\"ssReactTableHeader\">\n                        {column.render('Header')}\n                    </th>\n                    ))}\n                </tr>\n                ))}\n            </thead>\n            <tbody {...getTableBodyProps()}>\n                {rows.map(row => {\n                    prepareRow(row)\n                    return (\n                    <tr {...row.getRowProps()}>\n                    {row.cells.map(cell => {\n                        return (\n                        <td className=\"ssReactTableCell\" {...cell.getCellProps()}>\n                            {cell.render('Cell')}\n                        </td>\n                        )\n                    })}\n                    </tr>\n                    )\n                })}\n            </tbody>\n            </table>\n        </div>\n    )\n}\n\nexport default SSReactTable\n\n// Kept for Refernce:\n//\n//   const columns = useMemo(\n//     () => [\n//       {\n//         Header: 'Column 1',\n//         accessor: 'col1', // accessor is the \"key\" in the data\n//       },\n//       {\n//         Header: 'Column 2',\n//         accessor: 'col2',\n//       },\n//     ],\n//     []\n//   )\n//\n// const data = useMemo(\n//     () => [\n//       {\n//         col1: 'Hello',\n//         col2: 'World',\n//       },\n//       {\n//         col1: 'react-table',\n//         col2: 'rocks',\n//       },\n//       {\n//         col1: 'whatever',\n//         col2: 'you want',\n//       },\n//     ],\n//     []\n//   )","import React, {useState, useEffect} from 'react'\nimport \"./spreadsheetPreview.css\"\nimport { readExcelUrlAsync } from '../../../../../../helpers/spreadsheet'\nimport SSReactTable from './SSReactTable'\n\n\nfunction SpreadsheetPreview({url}) {\n    const [sheets, setSheets] = useState([])\n    \n    useEffect(() => {\n        readExcelUrlAsync(url)\n        .then(response => {\n            const sheetsArray = []\n            for (const key of Object.keys(response)) {\n                // console.log(key, response[key])\n                sheetsArray.push({name: key, rows: response[key]})\n            }\n            // console.log(sheetsArray)\n            setSheets(sheetsArray)\n        })\n        .catch(error => {\n            console.log(error)\n        })\n    }, [url]);\n\n    return (        \n        <div className=\"spreadSheetPreview\">\n            {sheets.map((sheet, index) =>\n                <div key={sheet.name} className=\"spreadSheets\">\n                    <SSReactTable title={sheet.name} data={sheet.rows} />\n                    {/* <SSTable title={sheet.name} rows={sheet.rows}/> */}\n                </div>\n            )}\n            \n            {/* <TextAreaCustom className=\"textArea\" disabled rows=\"20\" cols=\"80\" value={text} />   */}\n        </div>\n    )\n}\n\nexport default SpreadsheetPreview\n","import React  from 'react';\nimport \"./previewDisplay.css\";\nimport { connect } from 'react-redux';\n\nimport ImagePreview from './imagePreview/ImagePreview';\nimport { isImage, isPdf, isSpreadsheet, isText } from '../../../../../helpers/files';\nimport PdfPreview from './pdfPreview/PdfPreview';\nimport TextPreview from './textPreview/TextPreview';\nimport SpreadsheetPreview from './spreadsheetPreview/SpreadsheetPreview';\n\n\nfunction PreviewDisplay({ currentLink, url}) {\n    const fileurl = url ? url :\n        (currentLink ? currentLink : undefined)\n\n    // console.log(\"PreviewDisplay: fileurl:\", fileurl)\n\n    const onPdfLoad = () => {\n        // console.log(\"PDF Loaded\")\n    }\n\n    // useEffect(() => {\n    //     console.log(\"PreviewDisplay:useEffect fileurl:\", fileurl)\n    // }, currentLink)\n\n    return (\n        <div className=\"previewDisplay\">\n            <h2 className=\"previewTitle\">File Preview</h2>\n            {isImage(fileurl) && <ImagePreview src={fileurl}/> }\n            {isPdf(fileurl) && <PdfPreview url={fileurl} onLoad={onPdfLoad}/> }\n            {isText(fileurl) && <TextPreview url={fileurl} /> }\n            {isSpreadsheet(fileurl) && <SpreadsheetPreview url={fileurl} /> }\n        </div>\n    )\n}\n\nconst mapsStateToProps = state => {\n    return {\n        currentLink: state.resourceReducer.currentLink\n    }\n}\n\nexport default connect(mapsStateToProps)(PreviewDisplay)\n","import React, {useState} from 'react'\nimport Chart from './chart/Chart'\nimport FeaturedInfo from './featuredInfo/FeaturedInfo'\n\nimport { userData } from \"../../../../dummyData\";\n\nimport \"./filesDashboardPage.css\";\n\nimport ResourceDisplay from '../../resourceDisplay/ResourceDisplay';\nimport PreviewDisplay from './filesPreview/PreviewDisplay';\n\n\nfunction FilesDashboardPage({featured, chart}) {\n    const [flagFeatured] = useState(featured ? true : false)\n    const [flagChart] = useState(chart ? true : false)\n\n    return (\n        <div className=\"home\">\n            {flagFeatured && <FeaturedInfo />}\n            {flagChart && <Chart  data={userData} title=\"User Analytics\" dataKey=\"Active Users\" grid  />}\n\n            <div className=\"resourceWidgets\">\n                <div className=\"resourceListWidget\">\n                    <ResourceDisplay />\n                </div>\n                <div className=\"resourcePreviewWidget\">\n                    <PreviewDisplay />                    \n                </div>\n            </div>\n        </div>\n    )\n}\n\nexport default FilesDashboardPage\n","import React from 'react';\nimport \"./progressBarCustom.css\";\n\nfunction ProgressBarCustom(props) {\n    const { bgcolor, completed } = props;\n  \n    const containerStyles = {\n      height: 20,\n      width: '100%',\n      backgroundColor: \"#e0e0de\",\n      borderRadius: 50\n    }\n  \n    const fillerStyles = {\n      height: '100%',\n      width: `${completed}%`,\n      backgroundColor: bgcolor,\n      borderRadius: 'inherit',\n      textAlign: 'right'\n    }\n  \n    const labelStyles = {\n      padding: 5,\n      color: 'white',\n      fontWeight: 'bold'\n    }\n  \n    return (\n      <div style={containerStyles}>\n        <div style={fillerStyles}>\n          <span style={labelStyles}>{`${completed}%`}</span>\n        </div>\n      </div>\n    );\n}\n\nexport default ProgressBarCustom;\n","import React, {useState} from 'react'\nimport \"./bulkDataGrid.css\"\nimport { DataGrid } from '@mui/x-data-grid';\nimport { Refresh, FileDownload } from '@mui/icons-material';\n\nfunction BulkDataGrid({data, columns, onRefresh, onBulkDelete, onFileDownload }) {\n    const [selectedRows, setSelectedRows] = useState([])\n    const [bulkClass, setBulkClass] = useState(\"inactive\")\n\n    // console.log(\"BulkDataGrid: data:\", data);\n\n    const handleRowsSelection = (ids) => {        \n        setSelectedRows(ids);\n \n        if (ids.length > 0) {\n          setBulkClass(\"active\")\n        } else {\n          setBulkClass(\"inactive\")\n        }\n     }\n \n     const handleBulkDelete = () => {\n        if(onBulkDelete) {\n          onBulkDelete(selectedRows)\n        } else {\n          console.log('BulkDataGrid:onBulkDelete not defined')\n        }\n     }\n \n     const handleFileDownloadClick = () => {\n       if (onFileDownload) {\n           onFileDownload()\n       } else {\n        console.log('BulkDataGrid:onFileDownload not defined')\n       }\n     }\n\n    const handleRefreshClick = () => {\n        if (onRefresh) {\n            onRefresh()\n        } else {\n            console.log('BulkDataGrid:onRefresh not defined')\n        }\n    }\n\n    return (\n        <div className=\"bulkDataGrid\">\n            { ( onRefresh || onBulkDelete) &&\n            <div className=\"gridTopbar\">\n              <div className=\"gridBulkActions\">\n                <button \n                  className={\"gridBulkActionDelete \" + bulkClass}\n                  onClick={handleBulkDelete}\n                >\n                  Bulk Delete\n                </button>\n              </div>\n              <div className=\"gridReadActions\">\n                <FileDownload className=\"fileDownload\" onClick={handleFileDownloadClick}/>\n                <Refresh className=\"refreshResource\" onClick={handleRefreshClick}/>\n              </div>\n            </div>\n            }\n\n            <div className=\"gridTable\">\n                <DataGrid\n                    rows={data}\n                    columns={columns}\n                    pageSize={10}\n                    rowsPerPageOptions={[10 ]}\n                    checkboxSelection={onBulkDelete ? true : false}\n                    disableSelectionOnClick\n                    onSelectionModelChange = {handleRowsSelection}\n                />\n            </div>            \n        </div>\n    )\n}\n\nexport default BulkDataGrid\n","import React  from 'react'\nimport Select from 'react-select'\n\n\nexport const SingleSelectComponent = (props) => {\n\n  return (\n    <Select {...props}/>\n  )\n}\n\nexport const MultiSelectComponent = (props) => {\n\n  return (\n    <Select {...props} isMulti/>\n  )\n}\n","import React, {useState, useRef, useEffect} from 'react'\nimport \"./filesInput.css\"\n\nimport {connect} from 'react-redux'\nimport {addResourceAsync, uploadResourceAsync, removeResourceAsync, fetchResourcesAsync} from '../../../../redux'\nimport { generateId } from '../../../../dummyData';\nimport ProgressBarCustom from '../../../common/ProgressBarCustom';\nimport BulkDataGrid from '../../../common/bulkdatagrid/BulkDataGrid';\n\nimport { SingleSelectComponent } from '../../../common/reactselectsample/SingleSelectDropdown';\nimport { createFileObj } from \"../../../../helpers/files\";\n\n\nconst accountOptionsDefault = [\n    // { value: 'Zerodha Main', label: 'Zerodha Main' },\n    // { value: 'Axisdirect Main', label: 'Axisdirect Main'},\n    // { value: 'IndiaInfoline Main', label: 'IndiaInfoline Main'},\n    // { value: 'AxisDirect', label: 'Axis Direct' },\n    // { value: 'HDFCSec', label: 'HDFC Securities' },\n    // { value: 'ICICIDirect', label: 'ICICI Direct' },\n    // { value: 'IndiaInfoline', label: 'India Infoline' },\n    // { value: 'Zerodha', label: 'Zerodha' },\n    // { value: 'NSE', label: 'NSE' },\n    // { value: 'Etrade', label: 'E*Trade' },\n]\n\nconst docTypeOptionsDefault = [\n    { value: 'ContractNote', label: 'ContractNote' },\n    { value: 'FinancialLedger', label: 'FinancialLedger' },\n    { value: 'DematLedger', label: 'DematLedger' },\n    { value: 'TradeLedger', label: 'TradeLedger' },\n    { value: 'TradeConfirmation', label: 'TradeConfirmation' },\n]\n\nconst getResourceOptions = (res) => {\n    const options = res.map(o => {\n        return {\n            value: o.name,\n            label: o.name,\n        }\n    });\n\n    return options;\n}\n\nfunction FilesInput({ onClose, onResourceClose, files, docTypes, accounts,\n                        addFileAsync, uploadFileAsync, removeFileAsync,\n                        fetchDocTypesAsync, fetchAccountsAsync}) {\n    const [accountsOptions, setAccountsOptions] = useState(accountOptionsDefault)\n    const [selectedAccount, setSelectedAccount] = useState();\n    const [documentTypesOptions, setDocumentTypeOptions] = useState(docTypeOptionsDefault)\n    const [selectedDocumentType, setSelectedDocumentType] = useState();\n\n    const [path, setPath] = useState('');\n    const [selectedFiles, setSelectedFiles] = useState(undefined);\n    const [fileObjs, setFileObjs] = useState([]);\n    const [password, setPassword] = useState(\"AEWPG4169E\");\n    const [saveEnabled, setSaveEnabled] = useState(\"false\");\n    const filesInputRef = useRef();\n    const filesListRef = useRef([]);\n    const resType = 'files';\n\n    const columns = [\n        { \n            field: 'id', \n            headerName: 'ID', \n            width: 90,\n            renderHeader: (hparams) => {\n                return hparams.name\n            }\n            \n        },\n        {\n          field: 'title',\n          headerName: 'Title',\n          headerClassName: 'uploadFilesGridHeader',\n          width: 150,\n          // editable: true,\n        },\n        {\n          field: 'size',\n          headerName: 'File Size',\n          headerClassName: 'uploadFilesGridHeader',\n          width: 150,\n          renderCell: (params) => {\n            return (\n              <div className=\"filesGridSize\">\n                  {params.row.size}\n              </div>\n            )\n          }\n        },\n        {\n          field: 'progress',\n          headerName: \"Progress\",\n          headerClassName: 'uploadFilesGridHeader',\n          width: 150,\n          renderCell: (params) => {\n            return (\n              <div className=\"fileItemProgress\">\n                <ProgressBarCustom bgcolor=\"lightblue\" completed={params.row.completed}/>\n              </div>\n            )\n          }\n        }\n    ];\n\n    const onFileSelectionChange = (e) => {\n        console.log(e.target.files)\n        setSelectedFiles(e.target.files)\n\n        // e.target.filesDashboard is not an array but a FileList\n        const fileObjects = [...e.target.files].map((file) => {\n            const fileObject = {\n                ...createFileObj(file),\n                selectedAccount,\n                selectedDocumentType,\n                path,\n                password,\n                completed: 0,\n                uploaded: false\n            }\n\n            addFileAsync(resType, fileObject)\n\n            return fileObject;\n        })\n\n        setFileObjs(fileObjects);\n    }\n\n    const clearSelectedFiles = () => {\n        setSelectedFiles(undefined)\n        filesInputRef.current.value = null;\n    }\n\n    const clearFilesOnStore = (files) => {\n        files.forEach(file => {\n            removeFileAsync(resType, file)\n        })\n    }\n\n    const onUploadClick = () => {\n        fileObjs.forEach(file => {\n            const formData = new FormData();\n            formData.append('title', file.title);\n            formData.append('account', selectedAccount);\n            formData.append('document_type', selectedDocumentType);\n            formData.append('file', file.selectedFile);\n            formData.append('size', file.size);\n            formData.append('password', file.password);\n            formData.append('remark', 'No Remark');\n\n            console.log(\"selectedAccount: \", selectedAccount);\n            uploadFileAsync(resType, file, formData);\n        })\n\n        clearSelectedFiles();\n    }\n\n    const handleSelectedFilesModalClose = () => {\n        clearSelectedFiles();\n\n        // console.log(\"handleSelectedFilesModalClose(): onClose\", onClose)\n        if (onClose) {\n            onClose()\n        }\n\n        // console.log(\"handleSelectedFilesModalClose(): onResourceClose\", onResourceClose)\n        if (onResourceClose) {\n            onResourceClose()\n        }\n    }\n\n    useEffect(() => {\n        const prevFiles = filesListRef.current;\n        // console.log(\"prevFiles=\", filesListRef.current, \"files=\",files);\n\n        filesListRef.current = files;\n        if (prevFiles.length > 0 && files.length === 0) {\n            console.log(\"All files are uploaded\");\n        }\n    }, [files]);\n\n    useEffect(() => {\n        const options = getResourceOptions(docTypes);\n\n        // console.log(\"docTypesOptions:\", options);\n        setDocumentTypeOptions(options);\n    }, [docTypes]);\n\n    useEffect(() => {\n        const options = getResourceOptions(accounts);\n\n        // console.log(\"accountsOptions:\", options);\n        setAccountsOptions(options);\n    }, [accounts]);\n\n    useEffect(() => {\n        fetchDocTypesAsync();\n        fetchAccountsAsync();\n\n        return () => {\n            // console.log(\"return useEffect[]: filesListRef=\", filesListRef.current);\n            clearFilesOnStore(filesListRef.current)\n        }\n        // eslint-disable-next-line react-hooks/exhaustive-deps\n    }, []);\n\n    useEffect(() => {\n        console.log(selectedAccount);\n        if (selectedFiles)\n            console.log(selectedFiles);\n        setSaveEnabled(!!selectedFiles && selectedAccount && selectedDocumentType)\n    }, [selectedFiles, selectedAccount, selectedDocumentType])\n\n    const onPasswordChange = (e) => {\n        setPassword(e.target.value)\n    }\n\n    const handleAccountChange = (option) => {\n        console.log(\"Account: \", option.value);\n        setSelectedAccount(option.value);\n    }\n\n    const handleDocTypeChange = (option) => {\n        setSelectedDocumentType(option.value);\n    }\n\n    return (\n        <div className=\"inputContainer\">\n            <div className=\"inputOptionsContainer\">\n                <div className=\"selectContainer\">\n                    <label className=\"selectLabel\">Account</label>\n                    <div className=\"optionsContainer\">\n                        <SingleSelectComponent\n                            defaultValue={accountsOptions.filter(opt => opt.value === selectedAccount)}\n                            options={accountsOptions}\n                            onChange={handleAccountChange}/>\n                    </div>\n                </div>\n                <div className=\"selectContainer\">\n                    <label className=\"selectLabel\">Document Type</label>\n                    <div className=\"optionsContainer\">\n                        <SingleSelectComponent\n                            defaultValue={documentTypesOptions.filter(opt => opt.value === selectedDocumentType)}\n                            options={documentTypesOptions}\n                            onChange={handleDocTypeChange}/>\n                    </div>\n                </div>\n            </div>\n\n            <div className=\"inputFilesContainer\">\n                <input \n                    className=\"filesSelectContainer\"\n                    type=\"file\" \n                    onChange={e => onFileSelectionChange(e)} \n                    ref={filesInputRef}\n                    multiple\n                />\n                <div className=\"filesPathContainer\">\n                    <label>Folder</label>\n                    <input \n                        className=\"pathInput\" \n                        type=\"text\" \n                        placeholder=\"Path\" \n                        onChange={e => setPath(e.target.value)} \n                    />\n                </div>\n\n            </div>\n            <div className=\"selectedFilesGrid\">\n                <BulkDataGrid \n                    data={files}\n                    columns={columns} />\n            </div>\n            <div className=\"inputFieldsContainer\">\n                <div className=\"selectContainer\">\n                    <label className=\"selectLabel\">Password</label>\n                    <div className=\"optionsContainer\">\n                        <input type=\"text\" value={password} onChange={onPasswordChange}/>\n                    </div>\n                </div>\n            </div>\n            <div className=\"inputFilesBottomBar\">\n                <div className=\"uploadButtonContainer\">\n                    <button \n                        className={\"uploadButton\" + (saveEnabled ? \" active\" : \"\")}\n                        onClick={onUploadClick}>\n                            Upload\n                    </button>\n                </div>\n                <div className=\"closeButtonContainer\">\n                    <button \n                        className=\"closeButton active\"\n                        onClick={handleSelectedFilesModalClose}>\n                            Close\n                    </button>\n                </div>\n            </div>\n        </div>\n    )\n}\n\nconst mapStateToProps = state => {\n    return {\n        files: state.resourceReducer.files.filter(file => file.uploaded === false),\n        docTypes: state.resourceReducer.docTypes,\n        accounts: state.resourceReducer.accounts,\n    }\n  }\n  \nconst mapDispatchToProps = dispatch => {\n    return {\n        addFileAsync: (resType, name) => dispatch(addResourceAsync(resType, name)),\n        uploadFileAsync: (resType, name, formData) => dispatch(uploadResourceAsync(resType, name, formData)),\n        removeResourceAsync: (resType, name) => dispatch(removeResourceAsync(resType, name)),\n        fetchDocTypesAsync: () => {dispatch(fetchResourcesAsync(\"docTypes\"))},\n        fetchAccountsAsync: () => {dispatch(fetchResourcesAsync(\"accounts\"))},\n    }\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(FilesInput)\n","import React from 'react';\nimport \"./sampleModal.css\"\nimport Modal from 'react-modal';\n\nModal.setAppElement(\"#root\");\n\nfunction SampleModal({children, isOpen, onModalClose}) {\n    // We can also control isOpen using a local state\n\n    function handleModalClose(){\n        // console.log('SampleModal:onModalClose()')\n        onModalClose();\n    }\n  \n    return (\n      <div className=\"App\">\n        {/* <button onClick={toggleModal}>Open modal</button> */}\n        <Modal\n          isOpen={isOpen}\n          onRequestClose={handleModalClose}\n          contentLabel=\"My dialog\"\n          className=\"mymodal\"\n          overlayClassName=\"myoverlay\"\n          closeTimeoutMS={0}\n        >\n          {children}\n          {/* <div className=\"bottomBar\">\n            <button className=\"borderlessButton\" onClick={handleModalClose}>Close</button>\n          </div> */}\n        </Modal>\n      </div>\n    );\n}\n\nexport default SampleModal\n","import React, {useRef, useState} from 'react'\nimport \"./resourceGrid.css\"\n\nimport { connect } from 'react-redux';\nimport {\n    removeResourceAsync,\n    fetchResourcesAsync,\n    downloadResourcesAsync,\n    actionResourcesAsync,\n    uploadResourceAsync\n} from '../../../../redux';\n\nimport BulkDataGrid from '../../../common/bulkdatagrid/BulkDataGrid';\nimport SampleModal from '../../../common/modal/SampleModal';\nimport {createFileObj} from \"../../../../helpers/files\";\nimport {FileUpload, Refresh} from '@mui/icons-material';\n\n\nfunction ResourceGrid({children, title, resType, columns, data,\n                          removeResourceAsync, fetchResourcesAsync,\n                          downloadResourcesAsync, uploadResourceAsync, actionResourcesAsync}) {\n    const [showAddResourceModal, setShowAddResourceModal] = useState(false);\n    const filesInputRef = useRef();\n\n    const closeAddResourceModal = () => {\n        setShowAddResourceModal(false)\n    }\n\n    // The following code puts props in multiple children.\n    const childrenWithAddedProps = React.Children.map(children, (child, index) => {\n        return React.cloneElement(child, {\n            onResourceClose: closeAddResourceModal\n        });\n    });\n\n    const deleteResourceById = id => {\n      const resource = data.filter(res => res.id === id)[0]\n      removeResourceAsync(resType, resource);\n    }\n\n    const refreshResources = () => {\n      fetchResourcesAsync(resType)\n    }\n\n    const onResourcesBulkDelete = ids => {\n      ids.forEach(id => {\n        deleteResourceById(id);\n      })\n    }\n\n    const downloadResourceFile = () => {\n        const params = {filename: resType + '.xlsx'}\n        downloadResourcesAsync(resType, params, \"download\")\n    }\n\n    const handleFileChange = (e) => {\n        // console.log(\"Upload file for resource \", resType);\n\n        // e.target.filesDashboard is not an array but a FileList\n        const fileObjects = [...e.target.files].map((file) => {\n            const fileObject = {\n                ...createFileObj(file),\n                completed: 0,\n                uploaded: false\n            }\n\n            return fileObject;\n        })\n\n        fileObjects.forEach(file => {\n            const formData = new FormData();\n            formData.append('title', file.title);\n            formData.append('file', file.selectedFile);\n            formData.append('size', file.size);\n\n            uploadResourceAsync(resType, file, formData, \"upload\")\n        })\n\n        filesInputRef.current.value = null;\n\n        // console.log(\"handleUploadFileClick(): fileObjects =\", fileObjects);\n    }\n\n    const handleUploadFileClick = () => {\n        filesInputRef.current.click();\n    }\n\n    const handleAddResourceClick = () => {\n        setShowAddResourceModal(true)\n    }\n\n\n    const handleComputeResourceClick = () => {\n        actionResourcesAsync(resType, 'compute')\n    }\n\n    return (\n        <div className=\"resPage\">\n            <h1 className=\"resGridTitle\">{title}</h1>\n\n            <div className=\"resTopbar\">\n              <button className=\"borderlessButton\" onClick={handleComputeResourceClick}>Compute</button>\n              <div className=\"resDataInput\">\n                  <div className=\"borderlessButton fileUpload\" onClick={handleUploadFileClick}>\n                      <span className=\"uploadTitle\">Upload File</span>\n                      <FileUpload className=\"uploadIcon\" />\n                  </div>\n                  <input\n                      className=\"filesSelectContainer\"\n                      type=\"file\"\n                      onChange={e => handleFileChange(e)}\n                      ref={filesInputRef}\n                      multiple\n                      style={{display: 'none'}}\n                  />\n                  <button className=\"borderlessButton\" onClick={handleAddResourceClick}>Add Resource</button>\n              </div>\n            </div>\n            <div className=\"resAddModalContainer\">\n              <SampleModal isOpen={showAddResourceModal} onModalClose={closeAddResourceModal}>\n                  {childrenWithAddedProps}\n              </SampleModal>\n            </div>\n\n            <div className=\"resGridContainer\">\n              <BulkDataGrid \n                data={data}\n                columns={columns} \n                onRefresh={refreshResources}\n                onBulkDelete={onResourcesBulkDelete}\n                onFileDownload={downloadResourceFile}\n              />\n            </div>\n        </div>\n    )\n}\n\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    removeResourceAsync: (resType, resource) => {dispatch(removeResourceAsync(resType, resource))},\n    fetchResourcesAsync: (resType) => {dispatch(fetchResourcesAsync(resType))},\n    downloadResourcesAsync: (resType, params, action) => {dispatch(downloadResourcesAsync(resType, params, action))},\n    uploadResourceAsync: (resType, name, formData, action) => dispatch(uploadResourceAsync(resType, name, formData, action)),\n    actionResourcesAsync: (resType, action, params) => {dispatch(actionResourcesAsync(resType, action, params))}\n  }\n}\n\nexport default connect(null, mapDispatchToProps)(ResourceGrid);\n","import React, { useEffect } from 'react'\nimport \"./filesGridPage.css\"\nimport { PictureAsPdf, DeleteOutline, Done, Clear, TextFormat, CalendarViewMonth } from '@mui/icons-material';\n\nimport { connect } from 'react-redux';\nimport { removeResourceAsync, fetchResourcesAsync } from '../../../../redux';\nimport FilesInput from './FilesInput';\nimport ResourceGrid from \"../resource/ResourceGrid\";\n\n\nfunction FilesGridPage({files, removeFileAsync, fetchFilesAsync}) {\n    const resType = 'files';\n\n    const deleteFileById = id => {\n      const file = files.filter(file => file.id === id)[0]\n      removeFileAsync(resType, file);\n    }\n\n    const refreshFiles = () => {\n      fetchFilesAsync(resType)\n    }\n\n    const onFilePathClick = (fileurl) => {\n      window.open(fileurl)\n    }\n\n    const columns = [\n      { field: 'id', headerName: 'ID', width: 90 },\n      {\n        field: 'title',\n        headerName: 'Title',\n        width: 250,\n        // editable: true,\n      },\n      {\n        field: 'uploaded',\n        headerName: \"Uploaded\",\n        width: 100,\n        renderCell: (params) => {\n          return (\n            <div className=\"fileItemUploaded\">\n              {params.row.uploaded ? <Done/> : <Clear/>}\n            </div>\n          )\n        }\n      },\n      {\n        field: 'file',\n        headerName: 'Link',\n        width: 150,\n        // editable: true,\n        renderCell: (params) => {\n          return ( \n            <div className=\"fileLinksGroup\">\n              <div className=\"fileLink\" onClick={() => {onFilePathClick(params.row.file)}}>\n                <PictureAsPdf  className=\"fileItemLink\" />\n              </div>\n              <div className=\"fileLink\"  onClick={() => {onFilePathClick(params.row.textFile)}}>\n                <TextFormat  className=\"fileItemView\" />\n              </div>\n              <div className=\"fileLink\"  onClick={() => {onFilePathClick(params.row.ssFile)}}>\n                <CalendarViewMonth  className=\"fileItemView\" />\n              </div>\n            </div> \n          )\n        }\n      },\n      {\n        field: 'action',\n        headerName: \"Action\",\n        width: 50,\n        renderCell: (params) => {\n          return (\n            <div className=\"fileItemActions\">\n              <DeleteOutline  className=\"fileItemDelete\" onClick={() => {\n                    deleteFileById(params.row.id)\n                  }\n                }\n              />\n            </div>\n          )\n        }\n      }\n    ];\n\n    useEffect(() => {\n        refreshFiles();\n        // eslint-disable-next-line react-hooks/exhaustive-deps\n    }, [])\n\n    const closeAddFilesModal = () => {\n\n    }\n\n    return (\n        <div className=\"filesPage\">\n            <div className=\"filesResGridContainer\">\n                <ResourceGrid\n                    title='Files'\n                    resType={resType}\n                    data={files}\n                    columns={columns}>\n                    <FilesInput onClose={closeAddFilesModal}/>\n                </ResourceGrid>\n            </div>\n        </div>\n    )\n}\n\nconst mapStateToProps = state => {\n  return {\n      files: state.resourceReducer.files.filter(file => file.uploaded === true),\n  }\n}\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    removeFileAsync: (resType, file) => {dispatch(removeResourceAsync(resType, file))},\n    fetchFilesAsync: (resType) => {dispatch(fetchResourcesAsync(resType))}\n  }\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(FilesGridPage);\n","\nconst cloud_url = `http://23.236.53.153:8000`\nconst local_url = `http://localhost:8080`\nconst host_url = `${local_url}`\n\nconst api_url = `${host_url}/api/v1`\nconst media_url = `${host_url}/media`\n\n\nexport default  {\n  \"server\": {\n    \"files\": `${api_url}/dms/files`,\n\n    \"media\": `${media_url}`\n  },\n\n  \"auth\": {\n    \"token\": `eyJ0eXAiOiJKV1QiLCJhbGciOiJIUzI1NiJ9.eyJ0b2tlbl90eXBlIjoiYWNjZXNzIiwiZXhwIjoxNjUxNDgyOTUzLCJqdGkiOiI1MWQ0NDkyZGFkOGQ0MjQ3OTVmNTRkZjBkYzhmNDAwMSIsInVzZXJfaWQiOiJjYzYxYzdjYy00MjIyLTRmYTUtYjJiOC0xODg2Njc2NzQxOGMifQ.9kCiS3xDlPtF5h50Xyrg6xd8ra4PKY2NfRbkzwAQImE`\n  }\n}\n","import React from 'react'\nimport \"./fileSingleDirectPage.css\"\nimport { useParams } from 'react-router-dom';\nimport PreviewDisplay from '../filesDashboard/filesPreview/PreviewDisplay';\nimport { getMediaUrlFromName } from '../../../../helpers/server';\n\nfunction FileSingleDirectPage() {\n    const {filename} = useParams()\n    const fileurl = getMediaUrlFromName(filename)\n\n\n    return (\n        <div className=\"filePreviewContainer\">\n            <div className=\"filePreviewContent\">\n            {filename && (\n                <div>\n                    <PreviewDisplay  url={fileurl}/>\n                    <div className=\"fileName\">{filename}</div>\n                </div>\n            )\n            }\n            </div>\n        </div>\n    )\n}\n\nexport default FileSingleDirectPage\n","import config from '../config/default_config'\n\nexport const getServerUrl = (file) => {\n    return `${file.file}`\n}\n\nexport const getMediaUrlFromName = (name) => {\n    return `${config.server.media}/${name}`\n}","import React, {useState, useRef, useEffect} from 'react'\nimport \"./transactionInput.css\"\n\nimport {connect} from 'react-redux'\nimport {addResourceAsync, uploadResourceAsync, removeResourceAsync} from '../../../../redux'\nimport { generateId } from '../../../../dummyData';\n\nimport { SingleSelectComponent } from '../../../common/reactselectsample/SingleSelectDropdown';\n\n\nfunction TransactionInput({ onClose, onResourceClose, files, addFileAsync, uploadFileAsync, removeFileAsync }) {\n    const [path, setPath] = useState('');\n    const [selectedFiles, setSelectedFiles] = useState(undefined);\n\n    const filesInputRef = useRef();\n    const filesListRef = useRef();\n    const resType = 'files';\n\n    const createFileObj = (selectedFile) => {\n        return {\n            id: generateId(), \n            title: selectedFile.name, \n            path,\n            size: selectedFile.size,\n            selectedFile,\n            completed: 0,\n            uploaded: false\n        };\n    }\n\n    const onFileSelectionChange = (e) => {\n        setSelectedFiles(e.target.files)\n    }\n\n    const clearSelectedFiles = () => {\n        setSelectedFiles(undefined)\n        filesInputRef.current.value = null;\n    }\n\n    const clearFilesOnStore = (files) => {\n        files.forEach(file => {\n            removeFileAsync(resType, file)\n        })\n    }\n\n    const onUploadClick = () => {        \n        // e.target.filesDashboard is not an array but a FileList\n        const fileObjects = [...selectedFiles].map((file) => {\n            const fileObject = createFileObj(file)\n        \n            addFileAsync(resType, fileObject)\n            \n            return fileObject;\n        })\n\n        fileObjects.forEach(file => {\n            uploadFileAsync(resType, file)\n        })\n\n        clearSelectedFiles();\n    }\n\n    const handleSelectedFilesModalClose = () => {\n        clearSelectedFiles();\n\n        // console.log(\"handleSelectedFilesModalClose(): onClose\", onClose)\n        if (onClose) {\n            onClose()\n        }\n\n        // console.log(\"handleSelectedFilesModalClose(): onResourceClose\", onResourceClose)\n        if (onResourceClose) {\n            onResourceClose()\n        }\n    }\n\n    useEffect(() => {\n        filesListRef.current = files;\n    }, [files]);\n\n    useEffect(() => {\n        return () => {\n            // console.log(\"return useEffect[]: filesListRef=\", filesListRef.current);\n            clearFilesOnStore(filesListRef.current)\n        }\n        // eslint-disable-next-line react-hooks/exhaustive-deps\n    }, []);\n\n    const instOptions = [\n        { value: 'axis', label: 'Axis' },\n        { value: 'hdfc', label: 'HDFC' },\n        { value: 'icici', label: 'ICICI' },\n        { value: 'sbi', label: 'SBI' }\n    ]\n\n    const docTypeOptions = [\n        { value: 'bank_statement', label: 'Bank Statement' },\n        { value: 'broker_statement', label: 'Broker Statement' },\n        { value: 'contract_note', label: 'Contract Note' },\n        { value: 'creditcard_statement', label: 'CreditCard Statement' }\n    ]\n\n    return (\n        <div className=\"inputContainer\">\n            <div className=\"inputOptionsContainer\">\n                <div className=\"selectContainer\">\n                    <label className=\"selectLabel\">Bank/Broker</label>\n                    <div className=\"optionsContainer\">\n                        <SingleSelectComponent options={instOptions}/>\n                    </div>\n                </div>\n                <div className=\"selectContainer\">\n                    <label className=\"selectLabel\">Document Type</label>\n                    <div className=\"optionsContainer\">\n                        <SingleSelectComponent options={docTypeOptions}/>\n                    </div>\n                </div>\n            </div>\n\n            <div className=\"inputFilesContainer\">\n                <input \n                    className=\"filesSelectContainer\"\n                    type=\"file\" \n                    onChange={e => onFileSelectionChange(e)} \n                    ref={filesInputRef}\n                    multiple\n                />\n                <div className=\"filesPathContainer\">\n                    <label>Folder</label>\n                    <input \n                        className=\"pathInput\" \n                        type=\"text\" \n                        placeholder=\"Path\" \n                        onChange={e => setPath(e.target.value)} \n                    />\n                </div>\n\n            </div>\n\n            <div className=\"inputFilesBottomBar\">\n                <div className=\"uploadButtonContainer\">\n                    <button \n                        className={\"uploadButton\" + (selectedFiles ? \" active\" : \"\")}\n                        onClick={onUploadClick}>\n                            Upload\n                    </button>\n                </div>\n                <div className=\"closeButtonContainer\">\n                    <button \n                        className={\"closeButton\" + (selectedFiles ? \" active\" : \"\")}\n                        onClick={handleSelectedFilesModalClose}>\n                            Close\n                    </button>\n                </div>\n            </div>\n        </div>\n    )\n}\n\nconst mapStateToProps = state => {\n    return {\n        files: state.resourceReducer.files.filter(file => file.uploaded === false),\n    }\n  }\n  \nconst mapDispatchToProps = dispatch => {\n    return {\n        addFileAsync: (resType, name) => dispatch(addResourceAsync(resType, name)),\n        uploadFileAsync: (resType, name) => dispatch(uploadResourceAsync(resType, name)),\n        removeResourceAsync: (resType, name) => dispatch(removeResourceAsync(resType, name))\n    }\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(TransactionInput)\n","import React, {useState} from 'react'\nimport './cell.css'\nimport Typography from \"@material-ui/core/Typography/Typography\";\n\nfunction SecurityCell({params}) {\n    // console.log(params);\n    const consolidated = true;\n\n    if (consolidated) {\n        return (\n            <div className=\"cellSecurityContainer\">\n                <Typography className=\"cellSecContainerUpper\">\n                    <span className=\"cellMedium cellSecurityName\">{params.row.securityName}</span>\n                    <span className=\"cellSmall cellSecurityType cellMarginLeft\">{params.row.securityType}</span>\n                </Typography>\n                {params.row.securityType == \"FUT\" &&\n                <Typography className=\"cellSecContainerLower\">\n                    <span className=\"cellSmall\">{params.row.expiryDate}</span>\n                </Typography>\n                }\n                {params.row.securityType == \"OPT\" &&\n                <Typography className=\"cellSecContainerLower\">\n                    <span className=\"cellSmall\">{params.row.expiryDate}</span>\n                    <span className=\"cellSmall cellMarginLeft\">{params.row.optionStrike}</span>\n                    <span className=\"cellSmall cellMarginLeft\">{params.row.optionType}</span>\n                </Typography>\n                }\n            </div>\n        )\n    } else {\n        // {\n        //     field: 'securityType',\n        //     headerName: 'Security Type',\n        //     width: 50,\n        // },\n        // {\n        //     field: 'expiryDate',\n        //     headerName: 'Expiry Date',\n        //     width: 100,\n        // },\n        // {\n        //     field: 'optionStrike',\n        //     headerName: 'Strike',\n        //     width: 100,\n        // },\n        // {\n        //     field: 'optionType',\n        //     headerName: 'Type',\n        //     width: 70,\n        // },\n    }\n}\n\nexport default SecurityCell\n\n","import React, {useEffect} from 'react'\nimport \"./transactionsGridPage.css\"\nimport { DeleteOutline } from '@mui/icons-material';\n\nimport { connect } from 'react-redux';\nimport { removeResourceAsync, fetchResourcesAsync } from '../../../../redux';\nimport TransactionInput from './TransactionInput';\n\nimport ResourceGrid from \"../resource/ResourceGrid\";\nimport SecurityCell from \"../../../common/security/SecurityCell\"\nimport { jsDateToString, dateFormatter } from \"../../../../helpers/date\"\n\nfunction TransactionsGridPage({transactions, removeResourceAsync, fetchResourcesAsync}) {\n    const resType = 'transactions';\n\n    const deleteFileById = id => {\n        const res = transactions.filter(file => file.id === id)[0]\n        removeResourceAsync(resType, res);\n    }\n\n    const refreshTransactions = () => {\n        fetchResourcesAsync(resType)\n    }\n\n\n    const columns = [\n        { field: 'id', headerName: 'ID', width: 50 },\n        {\n            field: 'transactionDate',\n            headerName: 'Date',\n            type: 'date',\n            width: 120,\n            valueFormatter: (params) => {\n                // first converts to JS Date, then to locale option through date-fns\n                return dateFormatter(params.row.transactionDate)\n            },\n            // valueGetter for filtering\n            valueGetter: (params) => {\n                return dateFormatter(params.row.transactionDate)\n            }\n        },\n        {\n            field: 'securityName',\n            headerName: 'Security Name',\n            width: 200,\n            renderCell: (params) => {\n                return <SecurityCell params={params}/>\n            }\n        },\n        {\n            field: 'securityType',\n            headerName: 'Security Type',\n            hide: true,\n            width: 50,\n        },\n        {\n            field: 'expiryDate',\n            headerName: 'Expiry Date',\n            type: 'date',\n            hide: true,\n            width: 100,\n        },\n        {\n            field: 'optionStrike',\n            headerName: 'Option Strike',\n            hide: true,\n            width: 100,\n        },\n        {\n            field: 'optionType',\n            headerName: 'Option Type',\n            hide: true,\n            width: 70,\n        },\n        {\n            field: 'quantity',\n            headerName: 'Quantity',\n            type: 'number',\n            width: 100,\n            align: \"right\"\n        },\n        {\n            field: 'tradeType',\n            headerName: 'Trade Type',\n            width: 70,\n        },\n        {\n            field: 'grossAmount',\n            headerName: 'Gross Amount',\n            type: 'number',\n            width: 120,\n            align: \"right\"\n        },\n        {\n            field: 'action',\n            headerName: \"Action\",\n            width: 50,\n            renderCell: (params) => {\n                return (\n                    <div className=\"fileItemActions\">\n                        <DeleteOutline  className=\"fileItemDelete\" onClick={() => {\n                            deleteFileById(params.row.id)\n                        }\n                        }\n                        />\n                    </div>\n                )\n            }\n        }\n    ];\n\n    useEffect(() => {\n        refreshTransactions()\n        // eslint-disable-next-line react-hooks/exhaustive-deps\n    }, []);\n\n    const closeAddFilesModal = () => {\n\n    }\n\n    return (\n        <div className=\"filesPage\">\n            <div className=\"filesResGridContainer\">\n                <ResourceGrid\n                    title='Transactions'\n                    resType={resType}\n                    data={transactions}\n                    columns={columns}>\n                    <TransactionInput onClose={closeAddFilesModal}/>\n                </ResourceGrid>\n            </div>\n        </div>\n    )\n}\n\nconst mapStateToProps = state => {\n    return {\n        transactions: state.resourceReducer.transactions,\n    }\n}\n\nconst mapDispatchToProps = dispatch => {\n    return {\n        removeResourceAsync: (resType, file) => {dispatch(removeResourceAsync(resType, file))},\n        fetchResourcesAsync: (resType) => {dispatch(fetchResourcesAsync(resType))}\n    }\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(TransactionsGridPage);\n","import React, {useState} from 'react'\nimport \"./settingsServer.css\"\nimport { updateConfigAsync, setTokenAsync } from '../../../../redux'\nimport { connect } from 'react-redux'\n\nfunction SettingsServer({token, updateConfigAsync, setTokenAsync}) {\n    const [tokenVal, setTokenVal] = useState(token)\n\n    const onTokenChange = e => {\n        setTokenVal(e.target.value)\n    }\n\n    const onTokenUpdateClick = () => {\n        console.log('onTokenUpdateClick')\n        setTokenAsync(tokenVal)\n    }\n\n    return (\n        <div className=\"settingsServer\">\n            <h1>Server</h1>\n            <div className=\"serverSettingsContainer\">\n\n                <div className=\"authTokenContainer\">\n                    <span>Token</span>\n                    <input className=\"authTokenInput\" type=\"text\" value={tokenVal} onChange={onTokenChange} />\n                    <button className=\"authTokenButton\" onClick={onTokenUpdateClick}>Update</button>\n                </div>\n\n            </div>\n        </div>\n    )\n}\n\nconst mapStateToProps = state => {\n    return {\n        token: state.authReducer.token\n    }\n}\n  \nconst mapDispatchToProps = dispatch => {\n    return {\n        updateConfigAsync: (k, v) => {dispatch(updateConfigAsync(k, v))},\n        setTokenAsync: (token) => {dispatch(setTokenAsync(token))},\n    }\n}\n  \nexport default connect(mapStateToProps, mapDispatchToProps)(SettingsServer);\n","import React, {useState, useEffect} from 'react'\nimport \"./positionInput.css\"\n\nimport { SingleSelectComponent } from '../../../common/reactselectsample/SingleSelectDropdown';\n\n\nfunction PositionInput({ onSave, onClose, onResourceClose }) {\n    const [saveEnabled, setSaveEnabled] = useState(false);\n\n    const [inst, setInst] = useState(\"\");\n    const [docType, setDocType] = useState(\"\");\n\n\n\n    const handleInstChange = (option) => {\n        setInst(option.value)\n    }\n\n    const handleDocTypeChange = (option) => {\n        setDocType(option.value)\n    }\n\n    const handleSaveClick = () => {\n        if (onSave) {\n            const res = {\n                inst,\n                docType\n            };\n\n            onSave(res);\n        }\n    }\n\n    const handleCloseClick = () => {\n        if (onClose) {\n            onClose()\n        }\n\n        if (onResourceClose) {\n            onResourceClose()\n        }\n    }\n\n    useEffect(() => {\n        setSaveEnabled(docType !== \"\" && inst !== \"\")\n    }, [inst, docType])\n\n    const instOptions = [\n        { value: 'axis', label: 'Axis' },\n        { value: 'hdfc', label: 'HDFC' },\n        { value: 'icici', label: 'ICICI' },\n        { value: 'sbi', label: 'SBI' }\n    ]\n\n    const docTypeOptions = [\n        { value: 'bank_statement', label: 'Bank Statement' },\n        { value: 'broker_statement', label: 'Broker Statement' },\n        { value: 'contract_note', label: 'Contract Note' },\n        { value: 'creditcard_statement', label: 'CreditCard Statement' }\n    ]\n    \n\n    return (\n        <div className=\"inputContainer\">\n            <div className=\"inputOptionsContainer\">\n\n                <div className=\"selectContainer\">\n                    <label className=\"selectLabel\">Bank/Broker</label>\n                    <div className=\"optionsContainer\">\n                        <SingleSelectComponent options={instOptions} onChange={handleInstChange}/>\n                    </div>\n                </div>\n                <div className=\"selectContainer\">\n                    <label className=\"selectLabel\">Document Type</label>\n                    <div className=\"optionsContainer\">\n                        <SingleSelectComponent options={docTypeOptions} onChange={handleDocTypeChange}/>\n                    </div>\n                </div>\n            </div>\n\n\n            <div className=\"inputFilesBottomBar\">\n                <div className=\"uploadButtonContainer\">\n                    <button \n                        className={\"uploadButton\" + (saveEnabled ? \" active\" : \"\")}\n                        onClick={handleSaveClick}>\n                            Save\n                    </button>\n                </div>\n                <div className=\"closeButtonContainer\">\n                    <button \n                        className={\"closeButton\" + (saveEnabled ? \" active\" : \"\")}\n                        onClick={handleCloseClick}>\n                            Close\n                    </button>\n                </div>\n            </div>\n        </div>\n    )\n}\n\nexport default PositionInput\n","import React, {useState} from 'react'\nimport './cell.css'\nimport Typography from \"@material-ui/core/Typography/Typography\";\n\nfunction DualTrades({params}) {\n\n    return (\n        <div className=\"cellSecurityContainer\">\n            <Typography className=\"cellSecContainerUpper\">\n                <span className=\"cellSmall cellSecurityName\">{params.row.openTradeType}</span>\n                <span className=\"cellSmall cellSecurityType cellMarginLeft\">{params.row.openTradeDate}</span>\n                {\n                    params.row.openTradeType == 'BUY' &&\n                    <span className=\"cellSmall cellSecurityType cellMarginLeft\">{params.row.costBasis}</span>\n                }\n                {\n                    params.row.openTradeType == 'SELL' &&\n                    <span className=\"cellSmall cellSecurityType cellMarginLeft\">{params.row.proceeds}</span>\n                }\n            </Typography>\n\n            <Typography className=\"cellSecContainerLower\">\n                <span className=\"cellSmall cellSecurityName\">{params.row.closeTradeType}</span>\n                <span className=\"cellSmall cellSecurityType cellMarginLeft\">{params.row.closeTradeDate}</span>\n                {\n                    params.row.closeTradeType == 'BUY' &&\n                    <span className=\"cellSmall cellSecurityType cellMarginLeft\">{params.row.costBasis}</span>\n                }\n                {\n                    params.row.closeTradeType == 'SELL' &&\n                    <span className=\"cellSmall cellSecurityType cellMarginLeft\">{params.row.proceeds}</span>\n                }\n            </Typography>\n        </div>\n    )\n\n}\n\nexport default DualTrades\n\n","import React, {useEffect} from 'react'\nimport \"./positionsGridPage.css\"\nimport { DeleteOutline } from '@mui/icons-material';\n\nimport { connect } from 'react-redux';\nimport { addResourceAsync, removeResourceAsync, fetchResourcesAsync } from '../../../../redux';\nimport PositionInput from './PositionInput';\n\nimport ResourceGrid from \"../resource/ResourceGrid\";\nimport {generateId} from \"../../../../dummyData\";\nimport SecurityCell from \"../../../common/security/SecurityCell\"\nimport DualTrades from \"../../../common/security/DualTrades\"\nimport {dateFormatter} from \"../../../../helpers/date\";\n\n\nfunction PositionsGridPage({positions, addResourceAsync, removeResourceAsync, fetchResourcesAsync}) {\n    const resType = 'positions';\n\n    const deleteFileById = id => {\n        const res = positions.filter(file => file.id === id)[0]\n        removeResourceAsync(resType, res);\n    }\n\n    const refreshPositions = () => {\n        fetchResourcesAsync(resType, {consolidated: true})\n    }\n\n\n    const columns = [\n        { field: 'id', headerName: 'ID', width: 50 },\n        {\n            field: 'securityName',\n            headerName: 'Security Name',\n            width: 200,\n            renderCell: (params) => {\n                return <SecurityCell params={params}/>\n            }\n        },\n        {\n            field: 'securityType',\n            headerName: 'Security Type',\n            hide: true,\n            width: 50,\n        },\n        {\n            field: 'expiryDate',\n            headerName: 'Expiry Date',\n            hide: true,\n            width: 100,\n        },\n        {\n            field: 'optionStrike',\n            headerName: 'Option Strike',\n            hide: true,\n            width: 100,\n        },\n        {\n            field: 'optionType',\n            headerName: 'Option Type',\n            hide: true,\n            width: 70,\n        },\n        {\n            field: 'quantity',\n            headerName: 'Quantity',\n            type: 'number',\n            width: 100,\n            align: \"right\"\n        },\n        {\n            field: 'trades',\n            headerName: 'Trades',\n            width: 200,\n            renderCell: (params) => {\n                return <DualTrades params={params}/>\n            }\n        },\n        {\n            field: 'proceeds',\n            headerName: 'Proceeds',\n            hide: true,\n            type: 'number',\n            width: 120,\n            align: \"right\"\n        },\n        {\n            field: 'costBasis',\n            headerName: 'Cost Basis',\n            hide: true,\n            type: 'number',\n            width: 120,\n            align: \"right\"\n        },\n        {\n            field: 'netGain',\n            headerName: 'Gain/Loss',\n            type: 'number',\n            width: 120,\n            align: \"right\"\n        },\n        {\n            field: 'openTradeType',\n            headerName: 'Open Trade Type',\n            hide: true,\n            width: 100,\n            align: \"center\"\n        },\n        {\n            field: 'openTradeDate',\n            headerName: 'Open Trade Date',\n            type: 'date',\n            hide: true,\n            width: 100,\n            align: \"center\",\n            valueFormatter: (params) => {\n                // first converts to JS Date, then to locale option through date-fns\n                return dateFormatter(params.row.openTradeDate)\n            },\n            // valueGetter for filtering\n            valueGetter: (params) => {\n                return dateFormatter(params.row.openTradeDate)\n            }\n        },\n        {\n            field: 'closeTradeType',\n            headerName: 'Close Trade Type',\n            hide: true,\n            width: 100,\n            align: \"center\"\n        },\n        {\n            field: 'closeTradeDate',\n            headerName: 'Close Trade Date',\n            type: 'date',\n            hide: true,\n            width: 100,\n            align: \"center\",\n            valueFormatter: (params) => {\n                // first converts to JS Date, then to locale option through date-fns\n                return dateFormatter(params.row.closeTradeDate)\n            },\n            // valueGetter for filtering\n            valueGetter: (params) => {\n                return dateFormatter(params.row.closeTradeDate)\n            }\n        },\n        {\n            field: 'action',\n            headerName: \"Action\",\n            width: 50,\n            renderCell: (params) => {\n                return (\n                    <div className=\"fileItemActions\">\n                        <DeleteOutline  className=\"fileItemDelete\" onClick={() => {\n                            deleteFileById(params.row.id)\n                        }\n                        }\n                        />\n                    </div>\n                )\n            }\n        }\n    ];\n\n    useEffect(() => {\n        refreshPositions()\n        // eslint-disable-next-line react-hooks/exhaustive-deps\n    }, []);\n\n    const handleInputClose = () => {\n        console.log(\"PositionsGridPage: handleInputClose()\")\n\n    }\n\n    const handleInputSave = (res) => {\n        console.log('PositionsGridPage: handleInputSave(): res=', res)\n        res.id = generateId()\n        addResourceAsync(resType, res)\n    }\n\n    return (\n        <div className=\"filesPage\">\n            <div className=\"filesResGridContainer\">\n                <ResourceGrid\n                    title='Profit & Loss'\n                    resType={resType}\n                    data={positions}\n                    columns={columns}>\n                    <PositionInput onClose={handleInputClose} onSave={handleInputSave}/>\n                </ResourceGrid>\n            </div>\n        </div>\n    )\n}\n\nconst mapStateToProps = state => {\n    return {\n        positions: state.resourceReducer.positions,\n    }\n}\n\nconst mapDispatchToProps = dispatch => {\n    return {\n        addResourceAsync: (resType, file) => {dispatch(addResourceAsync(resType, file))},\n        removeResourceAsync: (resType, file) => {dispatch(removeResourceAsync(resType, file))},\n        fetchResourcesAsync: (resType, params) => {dispatch(fetchResourcesAsync(resType, params))}\n    }\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(PositionsGridPage);\n","import React, {useState, useEffect} from 'react'\nimport \"./openpositionInput.css\"\n\nimport { SingleSelectComponent } from '../../../common/reactselectsample/SingleSelectDropdown';\n\n\nfunction OpenPositionInput({ onSave, onClose, onResourceClose }) {\n    const [saveEnabled, setSaveEnabled] = useState(false);\n\n    const [inst, setInst] = useState(\"\");\n    const [docType, setDocType] = useState(\"\");\n\n\n\n    const handleInstChange = (option) => {\n        setInst(option.value)\n    }\n\n    const handleDocTypeChange = (option) => {\n        setDocType(option.value)\n    }\n\n    const handleSaveClick = () => {\n        if (onSave) {\n            const res = {\n                inst,\n                docType\n            };\n\n            onSave(res);\n        }\n    }\n\n    const handleCloseClick = () => {\n        if (onClose) {\n            onClose()\n        }\n\n        if (onResourceClose) {\n            onResourceClose()\n        }\n    }\n\n    useEffect(() => {\n        setSaveEnabled(docType !== \"\" && inst !== \"\")\n    }, [inst, docType])\n\n    const instOptions = [\n        { value: 'axis', label: 'Axis' },\n        { value: 'hdfc', label: 'HDFC' },\n        { value: 'icici', label: 'ICICI' },\n        { value: 'sbi', label: 'SBI' }\n    ]\n\n    const docTypeOptions = [\n        { value: 'bank_statement', label: 'Bank Statement' },\n        { value: 'broker_statement', label: 'Broker Statement' },\n        { value: 'contract_note', label: 'Contract Note' },\n        { value: 'creditcard_statement', label: 'CreditCard Statement' }\n    ]\n    \n\n    return (\n        <div className=\"inputContainer\">\n            <div className=\"inputOptionsContainer\">\n\n                <div className=\"selectContainer\">\n                    <label className=\"selectLabel\">Bank/Broker</label>\n                    <div className=\"optionsContainer\">\n                        <SingleSelectComponent options={instOptions} onChange={handleInstChange}/>\n                    </div>\n                </div>\n                <div className=\"selectContainer\">\n                    <label className=\"selectLabel\">Document Type</label>\n                    <div className=\"optionsContainer\">\n                        <SingleSelectComponent options={docTypeOptions} onChange={handleDocTypeChange}/>\n                    </div>\n                </div>\n            </div>\n\n\n            <div className=\"inputFilesBottomBar\">\n                <div className=\"uploadButtonContainer\">\n                    <button \n                        className={\"uploadButton\" + (saveEnabled ? \" active\" : \"\")}\n                        onClick={handleSaveClick}>\n                            Save\n                    </button>\n                </div>\n                <div className=\"closeButtonContainer\">\n                    <button \n                        className={\"closeButton\" + (saveEnabled ? \" active\" : \"\")}\n                        onClick={handleCloseClick}>\n                            Close\n                    </button>\n                </div>\n            </div>\n        </div>\n    )\n}\n\nexport default OpenPositionInput\n","import React, {useState} from 'react'\nimport './cell.css'\nimport Typography from \"@material-ui/core/Typography/Typography\";\n\nfunction OpenTrade({params}) {\n\n    return (\n        <div className=\"cellSecurityContainer\">\n            <Typography className=\"cellSecContainerUpper\">\n                <span className=\"cellSmall cellSecurityName\">{params.row.openTradeType}</span>\n                <span className=\"cellSmall cellSecurityType cellMarginLeft\">{params.row.openTradeDate}</span>\n                {\n                    params.row.openTradeType == 'BUY' &&\n                    <span className=\"cellSmall cellSecurityType cellMarginLeft\">{params.row.costBasis}</span>\n                }\n                {\n                    params.row.openTradeType == 'SELL' &&\n                    <span className=\"cellSmall cellSecurityType cellMarginLeft\">{params.row.proceeds}</span>\n                }\n            </Typography>\n\n            {/*<Typography className=\"cellSecContainerLower\">*/}\n                {/*<span className=\"cellSmall cellSecurityName\">{params.row.closeTradeType}</span>*/}\n                {/*<span className=\"cellSmall cellSecurityType cellMarginLeft\">{params.row.closeTradeDate}</span>*/}\n                {/*{*/}\n                    {/*params.row.closeTradeType == 'BUY' &&*/}\n                    {/*<span className=\"cellSmall cellSecurityType cellMarginLeft\">{params.row.costBasis}</span>*/}\n                {/*}*/}\n                {/*{*/}\n                    {/*params.row.closeTradeType == 'SELL' &&*/}\n                    {/*<span className=\"cellSmall cellSecurityType cellMarginLeft\">{params.row.proceeds}</span>*/}\n                {/*}*/}\n            {/*</Typography>*/}\n        </div>\n    )\n\n}\n\nexport default OpenTrade\n\n","import React, {useEffect} from 'react'\nimport \"./openpositionsGridPage.css\"\nimport { DeleteOutline } from '@mui/icons-material';\n\nimport { connect } from 'react-redux';\nimport { addResourceAsync, removeResourceAsync, fetchResourcesAsync } from '../../../../redux';\nimport OpenPositionInput from './OpenPositionInput';\n\nimport ResourceGrid from \"../resource/ResourceGrid\";\nimport {generateId} from \"../../../../dummyData\";\nimport SecurityCell from \"../../../common/security/SecurityCell\"\nimport OpenTrade from \"../../../common/security/OpenTrade\"\nimport {dateFormatter} from \"../../../../helpers/date\";\n\n\nfunction OpenPositionsGridPage({openpositions, addResourceAsync, removeResourceAsync, fetchResourcesAsync}) {\n    const resType = 'openpositions';\n\n    const deleteFileById = id => {\n        const res = openpositions.filter(file => file.id === id)[0]\n        removeResourceAsync(resType, res);\n    }\n\n    const refreshPositions = () => {\n        fetchResourcesAsync(resType, {consolidated: true})\n    }\n\n    const columns = [\n        { field: 'id', headerName: 'ID', width: 50 },\n        {\n            field: 'securityName',\n            headerName: 'Security Name',\n            width: 250,\n            renderCell: (params) => {\n                return <SecurityCell params={params}/>\n            }\n        },\n        {\n            field: 'securityType',\n            headerName: 'Security Type',\n            hide: true,\n            width: 50,\n        },\n        {\n            field: 'expiryDate',\n            headerName: 'Expiry Date',\n            hide: true,\n            width: 100,\n        },\n        {\n            field: 'optionStrike',\n            headerName: 'Option Strike',\n            hide: true,\n            width: 100,\n        },\n        {\n            field: 'optionType',\n            headerName: 'Option Type',\n            hide: true,\n            width: 70,\n        },\n        {\n            field: 'quantity',\n            headerName: 'Quantity',\n            type: 'number',\n            width: 100,\n            align: \"right\"\n        },\n        {\n            field: 'trade',\n            headerName: 'Trade',\n            width: 200,\n            renderCell: (params) => {\n                return <OpenTrade params={params}/>\n            }\n        },\n        {\n            field: 'curretnValue',\n            headerName: 'Value',\n            type: 'number',\n            width: 120,\n            align: \"right\"\n        },\n        {\n            field: 'curretnGain',\n            headerName: 'Gain/Loss',\n            type: 'number',\n            width: 120,\n            align: \"right\"\n        },\n        {\n            field: 'proceeds',\n            headerName: 'Proceeds',\n            hide: true,\n            width: 100,\n            align: \"right\"\n        },\n        {\n            field: 'costBasis',\n            headerName: 'Cost Basis',\n            hide: true,\n            width: 100,\n            align: \"right\"\n        },\n        {\n            field: 'openTradeType',\n            headerName: 'Open Trade Type',\n            hide: true,\n            width: 100,\n            align: \"center\"\n        },\n        {\n            field: 'openTradeDate',\n            headerName: 'Open Trade Date',\n            type: 'date',\n            hide: true,\n            width: 100,\n            align: \"center\",\n            valueFormatter: (params) => {\n                // first converts to JS Date, then to locale option through date-fns\n                return dateFormatter(params.row.openTradeDate)\n            },\n            // valueGetter for filtering\n            valueGetter: (params) => {\n                return dateFormatter(params.row.openTradeDate)\n            }\n        },\n        {\n            field: 'action',\n            headerName: \"Action\",\n            width: 50,\n            renderCell: (params) => {\n                return (\n                    <div className=\"fileItemActions\">\n                        <DeleteOutline  className=\"fileItemDelete\" onClick={() => {\n                            deleteFileById(params.row.id)\n                        }\n                        }\n                        />\n                    </div>\n                )\n            }\n        }\n    ];\n\n    useEffect(() => {\n        refreshPositions()\n        // eslint-disable-next-line react-hooks/exhaustive-deps\n    }, []);\n\n    const handleInputClose = () => {\n        console.log(\"OpenPositionsGridPage: handleInputClose()\")\n\n    }\n\n    const handleInputSave = (res) => {\n        console.log('OpenPositionsGridPage: handleInputSave(): res=', res)\n        res.id = generateId()\n        addResourceAsync(resType, res)\n    }\n\n    return (\n        <div className=\"filesPage\">\n            <div className=\"filesResGridContainer\">\n                <ResourceGrid\n                    title='Portfolio'\n                    resType={resType}\n                    data={openpositions}\n                    columns={columns}>\n                    <OpenPositionInput onClose={handleInputClose} onSave={handleInputSave}/>\n                </ResourceGrid>\n            </div>\n        </div>\n    )\n}\n\nconst mapStateToProps = state => {\n    return {\n        openpositions: state.resourceReducer.openpositions,\n    }\n}\n\nconst mapDispatchToProps = dispatch => {\n    return {\n        addResourceAsync: (resType, file) => {dispatch(addResourceAsync(resType, file))},\n        removeResourceAsync: (resType, file) => {dispatch(removeResourceAsync(resType, file))},\n        fetchResourcesAsync: (resType, params) => {dispatch(fetchResourcesAsync(resType, params))}\n    }\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(OpenPositionsGridPage);\n","import React, {useState, useEffect} from 'react'\nimport \"./invoicesInput.css\"\n\nimport { SingleSelectComponent } from '../../../common/reactselectsample/SingleSelectDropdown';\n\n\nfunction InvoicesInput({ onSave, onClose, onResourceClose }) {\n    const [saveEnabled, setSaveEnabled] = useState(false);\n\n    const [inst, setInst] = useState(\"\");\n    const [docType, setDocType] = useState(\"\");\n\n\n\n    const handleInstChange = (option) => {\n        setInst(option.value)\n    }\n\n    const handleDocTypeChange = (option) => {\n        setDocType(option.value)\n    }\n\n    const handleSaveClick = () => {\n        if (onSave) {\n            const res = {\n                inst,\n                docType\n            };\n\n            onSave(res);\n        }\n    }\n\n    const handleCloseClick = () => {\n        if (onClose) {\n            onClose()\n        }\n\n        if (onResourceClose) {\n            onResourceClose()\n        }\n    }\n\n    useEffect(() => {\n        setSaveEnabled(docType !== \"\" && inst !== \"\")\n    }, [inst, docType])\n\n    const instOptions = [\n        { value: 'axis', label: 'Axis' },\n        { value: 'hdfc', label: 'HDFC' },\n        { value: 'icici', label: 'ICICI' },\n        { value: 'sbi', label: 'SBI' }\n    ]\n\n    const docTypeOptions = [\n        { value: 'bank_statement', label: 'Bank Statement' },\n        { value: 'broker_statement', label: 'Broker Statement' },\n        { value: 'contract_note', label: 'Contract Note' },\n        { value: 'creditcard_statement', label: 'CreditCard Statement' }\n    ]\n    \n\n    return (\n        <div className=\"inputContainer\">\n            <div className=\"inputOptionsContainer\">\n\n                <div className=\"selectContainer\">\n                    <label className=\"selectLabel\">Bank/Broker</label>\n                    <div className=\"optionsContainer\">\n                        <SingleSelectComponent options={instOptions} onChange={handleInstChange}/>\n                    </div>\n                </div>\n                <div className=\"selectContainer\">\n                    <label className=\"selectLabel\">Document Type</label>\n                    <div className=\"optionsContainer\">\n                        <SingleSelectComponent options={docTypeOptions} onChange={handleDocTypeChange}/>\n                    </div>\n                </div>\n            </div>\n\n\n            <div className=\"inputFilesBottomBar\">\n                <div className=\"uploadButtonContainer\">\n                    <button \n                        className={\"uploadButton\" + (saveEnabled ? \" active\" : \"\")}\n                        onClick={handleSaveClick}>\n                            Save\n                    </button>\n                </div>\n                <div className=\"closeButtonContainer\">\n                    <button \n                        className={\"closeButton\" + (saveEnabled ? \" active\" : \"\")}\n                        onClick={handleCloseClick}>\n                            Close\n                    </button>\n                </div>\n            </div>\n        </div>\n    )\n}\n\nexport default InvoicesInput;\n","import React, {useEffect} from 'react'\nimport \"./invoicesGridPage.css\"\nimport { DeleteOutline } from '@mui/icons-material';\n\nimport { connect } from 'react-redux';\nimport { addResourceAsync, removeResourceAsync, fetchResourcesAsync } from '../../../../redux';\nimport InvoicesInput from './InvoicesInput';\n\nimport ResourceGrid from \"../resource/ResourceGrid\";\nimport {generateId} from \"../../../../dummyData\";\n\n\nfunction InvoicesGridPage({invoices, addResourceAsync, removeResourceAsync, fetchResourcesAsync}) {\n    const resType = 'invoices';\n\n    const deleteFileById = id => {\n        const res = invoices.filter(file => file.id === id)[0]\n        removeResourceAsync(resType, res);\n    }\n\n    const refreshPositions = () => {\n        fetchResourcesAsync(resType)\n    }\n\n    const columns = [\n        { field: 'id', headerName: 'ID', width: 50 },\n\n        {\n            field: 'expiryDate',\n            headerName: 'Expiry Date',\n            hide: true,\n            width: 100,\n        },\n        {\n            field: 'optionStrike',\n            headerName: 'Option Strike',\n            hide: true,\n            width: 100,\n        },\n\n    ];\n\n    useEffect(() => {\n        refreshPositions()\n        // eslint-disable-next-line react-hooks/exhaustive-deps\n    }, []);\n\n    const handleInputClose = () => {\n        console.log(\"OpenPositionsGridPage: handleInputClose()\")\n\n    }\n\n    const handleInputSave = (res) => {\n        console.log('OpenPositionsGridPage: handleInputSave(): res=', res)\n        res.id = generateId()\n        addResourceAsync(resType, res)\n    }\n\n    return (\n        <div className=\"filesPage\">\n            <div className=\"filesResGridContainer\">\n                <ResourceGrid\n                    title='Invoices'\n                    resType={resType}\n                    data={invoices}\n                    columns={columns}>\n                    <InvoicesInput onClose={handleInputClose} onSave={handleInputSave}/>\n                </ResourceGrid>\n            </div>\n        </div>\n    )\n}\n\nconst mapStateToProps = state => {\n    return {\n        invoices: state.resourceReducer.invoices,\n    }\n}\n\nconst mapDispatchToProps = dispatch => {\n    return {\n        addResourceAsync: (resType, file) => {dispatch(addResourceAsync(resType, file))},\n        removeResourceAsync: (resType, file) => {dispatch(removeResourceAsync(resType, file))},\n        fetchResourcesAsync: (resType, params) => {dispatch(fetchResourcesAsync(resType, params))}\n    }\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(InvoicesGridPage);\n","import React, {useState, useEffect} from 'react'\nimport \"./finTransactionsInput.css\"\n\nimport { SingleSelectComponent } from '../../../common/reactselectsample/SingleSelectDropdown';\n\n\nfunction FinTransactionsInput({ onSave, onClose, onResourceClose }) {\n    const [saveEnabled, setSaveEnabled] = useState(false);\n\n    const [inst, setInst] = useState(\"\");\n    const [docType, setDocType] = useState(\"\");\n\n\n\n    const handleInstChange = (option) => {\n        setInst(option.value)\n    }\n\n    const handleDocTypeChange = (option) => {\n        setDocType(option.value)\n    }\n\n    const handleSaveClick = () => {\n        if (onSave) {\n            const res = {\n                inst,\n                docType\n            };\n\n            onSave(res);\n        }\n    }\n\n    const handleCloseClick = () => {\n        if (onClose) {\n            onClose()\n        }\n\n        if (onResourceClose) {\n            onResourceClose()\n        }\n    }\n\n    useEffect(() => {\n        setSaveEnabled(docType !== \"\" && inst !== \"\")\n    }, [inst, docType])\n\n    const instOptions = [\n        { value: 'axis', label: 'Axis' },\n        { value: 'hdfc', label: 'HDFC' },\n        { value: 'icici', label: 'ICICI' },\n        { value: 'sbi', label: 'SBI' }\n    ]\n\n    const docTypeOptions = [\n        { value: 'bank_statement', label: 'Bank Statement' },\n        { value: 'broker_statement', label: 'Broker Statement' },\n        { value: 'contract_note', label: 'Contract Note' },\n        { value: 'creditcard_statement', label: 'CreditCard Statement' }\n    ]\n    \n\n    return (\n        <div className=\"inputContainer\">\n            <div className=\"inputOptionsContainer\">\n\n                <div className=\"selectContainer\">\n                    <label className=\"selectLabel\">Bank/Broker</label>\n                    <div className=\"optionsContainer\">\n                        <SingleSelectComponent options={instOptions} onChange={handleInstChange}/>\n                    </div>\n                </div>\n                <div className=\"selectContainer\">\n                    <label className=\"selectLabel\">Document Type</label>\n                    <div className=\"optionsContainer\">\n                        <SingleSelectComponent options={docTypeOptions} onChange={handleDocTypeChange}/>\n                    </div>\n                </div>\n            </div>\n\n\n            <div className=\"inputFilesBottomBar\">\n                <div className=\"uploadButtonContainer\">\n                    <button \n                        className={\"uploadButton\" + (saveEnabled ? \" active\" : \"\")}\n                        onClick={handleSaveClick}>\n                            Save\n                    </button>\n                </div>\n                <div className=\"closeButtonContainer\">\n                    <button \n                        className={\"closeButton\" + (saveEnabled ? \" active\" : \"\")}\n                        onClick={handleCloseClick}>\n                            Close\n                    </button>\n                </div>\n            </div>\n        </div>\n    )\n}\n\nexport default FinTransactionsInput;\n","import React, {useEffect} from 'react'\nimport \"./finTransactionsGridPage.css\"\nimport { DeleteOutline } from '@mui/icons-material';\n\nimport { connect } from 'react-redux';\nimport { addResourceAsync, removeResourceAsync, fetchResourcesAsync } from '../../../../redux';\nimport FinTransactionsInput from './FinTransactionsInput';\n\nimport ResourceGrid from \"../resource/ResourceGrid\";\nimport {generateId} from \"../../../../dummyData\";\n\n\nfunction FinTransactionsGridPage({finTransactions, addResourceAsync, removeResourceAsync, fetchResourcesAsync}) {\n    const resType = 'finTransactions';\n\n    const deleteFileById = id => {\n        const res = finTransactions.filter(file => file.id === id)[0]\n        removeResourceAsync(resType, res);\n    }\n\n    const refreshPositions = () => {\n        fetchResourcesAsync(resType)\n    }\n\n    const columns = [\n        {\n            field: 'id',\n            headerName: 'ID',\n            hide: true,\n            width: 50\n        },\n        {\n            field: 'date',\n            type: 'date',\n            headerName: 'Date',\n            width: 100,\n        },\n        {\n            field: 'account',\n            headerName: 'Account',\n            hide: true,\n            width: 100,\n        },\n\n        {\n            field: 'description',\n            headerName: 'Description',\n            width: 200,\n        },\n        {\n            field: 'subAccount',\n            headerName: 'Sub Account',\n            width: 150,\n        },\n        {\n            field: 'category',\n            headerName: 'Category',\n            width: 150,\n        },\n        {\n            field: 'debit',\n            type: 'number',\n            headerName: 'Debit',\n            width: 100,\n        },\n        {\n            field: 'credit',\n            type: 'number',\n            headerName: 'Credit',\n            width: 100,\n        },\n        {\n            field: 'balance',\n            type: 'number',\n            headerName: 'Balance',\n            width: 100,\n        }\n    ];\n\n    useEffect(() => {\n        refreshPositions()\n        // eslint-disable-next-line react-hooks/exhaustive-deps\n    }, []);\n\n    const handleInputClose = () => {\n        console.log(\"OpenPositionsGridPage: handleInputClose()\")\n\n    }\n\n    const handleInputSave = (res) => {\n        console.log('OpenPositionsGridPage: handleInputSave(): res=', res)\n        res.id = generateId()\n        addResourceAsync(resType, res)\n    }\n\n    return (\n        <div className=\"filesPage\">\n            <div className=\"filesResGridContainer\">\n                <ResourceGrid\n                    title='Financial Transactions'\n                    resType={resType}\n                    data={finTransactions}\n                    columns={columns}>\n                    <FinTransactionsInput onClose={handleInputClose} onSave={handleInputSave}/>\n                </ResourceGrid>\n            </div>\n        </div>\n    )\n}\n\nconst mapStateToProps = state => {\n    return {\n        finTransactions: state.resourceReducer.finTransactions,\n    }\n}\n\nconst mapDispatchToProps = dispatch => {\n    return {\n        addResourceAsync: (resType, file) => {dispatch(addResourceAsync(resType, file))},\n        removeResourceAsync: (resType, file) => {dispatch(removeResourceAsync(resType, file))},\n        fetchResourcesAsync: (resType, params) => {dispatch(fetchResourcesAsync(resType, params))}\n    }\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(FinTransactionsGridPage);\n","import \"./pageDisplay.css\"\n\nimport {\n    Switch,\n    Route\n} from 'react-router-dom';\n\nimport FilesDashboardPage from \"./pages/filesDashboard/FilesDashboardPage\"\nimport FilesGridPage from \"./pages/filesGrid/FilesGridPage\";\nimport FileSingleDirectPage from \"./pages/filesSingle/FileSingleDirectPage\";\n\nimport TransactionGridPage from \"./pages/portfolioTransactions/TransactionsGridPage\";\n\nimport SettingsServer from \"./pages/settingsServer/SettingsServer\";\nimport PositionsGridPage from \"./pages/portfolioPositions/PositionsGridPage\";\nimport OpenPositionsGridPage from \"./pages/portfolioOpenPositions/OpenPositionsGridPage\";\nimport InvoicesGridPage from \"./pages/financialInvoices/InvoicesGridPage\";\nimport FinTransactionsGridPage from \"./pages/financialTransactions/FinTransactionsGridPage\"\n\n  \nfunction PageDisplay() {\n    return ( \n        <div className=\"mainScreen\">\n            <Switch>\n                <Route exact path=\"/files/dashboard\">\n                    <FilesDashboardPage />\n                </Route>\n                <Route path=\"/files/grid\">\n                    <FilesGridPage />\n                </Route>\n                <Route path=\"/files/:filename\" component={FileSingleDirectPage}>\n                    {/* <FilePreview /> */}\n                </Route>\n\n                <Route path=\"/portfolio/transactions\">\n                    <TransactionGridPage />\n                </Route>\n                <Route path=\"/portfolio/positions\">\n                    <PositionsGridPage />\n                </Route>\n                <Route path=\"/portfolio/openpositions\">\n                    <OpenPositionsGridPage />\n                </Route>\n\n                <Route path=\"/financial/invoices\">\n                    <InvoicesGridPage />\n                </Route>\n                <Route path=\"/financial/transactions\">\n                    <FinTransactionsGridPage />\n                </Route>\n\n                <Route path=\"/settings/server\">\n                    <SettingsServer />\n                </Route>\n            </Switch>\n        </div>\n    )\n}\n\nexport default PageDisplay\n","import { ADD_RESOURCE, REMOVE_RESOURCE, SET_CURRENT_RESOURCE, SET_RESOURCES, UPDATE_RESOURCE } from \"./resourceAction.types\";\n\nconst initialState = {\n    files:[],\n    transactions:[],\n    positions:[],\n    openpositions:[],\n    invoices:[],\n    finTransactions:[],\n    docTypes:[],\n    accounts:[],\n    \n    currentLink: ''\n}\n\nconst reducer = (state = initialState, action) => {\n    // console.log('action.payload:', action.payload);\n    var newState = {...state}\n    var resType;\n    if (action && action.payload && 'resType' in action.payload) {\n        resType = action.payload.resType; \n    }\n\n    switch(action.type) {\n        case ADD_RESOURCE:\n            newState[resType] = [...state[resType], action.payload.resource]\n            return newState\n\n        case UPDATE_RESOURCE:\n            newState[resType] = state[resType].map(resource => resource.id === action.payload.id ?\n                {...resource, ...action.payload.update} :\n                resource\n            )\n            return newState;\n\n        case REMOVE_RESOURCE:\n            newState[resType] = state[resType].filter(resource => resource.id !== action.payload.id)\n            return newState;\n\n        case SET_RESOURCES:\n            newState[resType] = action.payload.resources;\n            return newState;\n\n        case SET_CURRENT_RESOURCE:\n            // console.log('resourcesReducer: ', action.payload)\n            return {\n                ...state,\n                currentLink: action.payload.link\n            }\n\n        default:\n            return state\n    }\n}\n\nexport default reducer","import {ADD_CONFIG, UPDATE_CONFIG, REMOVE_CONFIG} from \"./configAction.types\"; \nimport config from '../../config/default_config'\n\n\nconst initialState = {\n    server: {\n        files: `${config.server.files}`,\n        transactions: `${config.server.transactions}`,\n        positions: `${config.server.positions}`,\n        openpositions: `${config.server.openpositions}`,\n        invoices: `${config.server.invoices}`,\n        finTransactions: `${config.server.finTransactions}`,\n        docTypes: `${config.server.docTypes}`,\n        accounts: `${config.server.accounts}`,\n    }\n}\n\n\nconst reducer = (state = initialState, action) => {\n    switch(action.type) {\n        case ADD_CONFIG:\n            if (!(action.payload.key in state)) {\n                const newState = {...state};\n                newState[action.payload.key] = action.payload.value;\n                return newState;\n            }\n            return state;\n\n        case UPDATE_CONFIG:\n            if (action.payload.key in state) {\n                const newState = {...state};\n                newState[action.payload.key] = action.payload.value;\n                return newState;\n            }\n            return state;\n\n        case REMOVE_CONFIG:\n            if (action.payload.key in state) {\n                const newState = {...state};\n                delete newState[action.payload.key];\n                return newState;\n            }\n            return state;\n\n        default:\n            return state\n    }\n}\n\nexport default reducer\n","import { SET_TOKEN, CLEAR_TOKEN } from \"./authAction.types\";\nimport config from '../../config/default_config';\n\nconst initialState = {\n    isLoggedIn: false,\n    token_title: 'Bearer',\n    token: config.auth.token\n}\n\nconst reducer = (state = initialState, action) => {\n    switch(action.type) {\n        case SET_TOKEN:\n            console.log('SET_TOKEN:', action.payload.token)\n            return {\n                ...state,\n                isLoggedIn: true,\n                token: action.payload.token\n            }\n\n        case CLEAR_TOKEN:\n            return {\n                ...state,\n                isLoggedIn: false,\n                token: undefined\n            }\n\n        default:\n            return state\n    }\n}\n\nexport default reducer","import {combineReducers} from 'redux'\nimport resourceReducer from './resource/resource.reducer'\nimport configReducer from './config/config.reducer'\nimport authReducer from './auth/auth.reducer'\n\nconst rootReducer = combineReducers({\n    resourceReducer: resourceReducer,\n    configReducer: configReducer,\n    authReducer: authReducer\n})\n\nexport default rootReducer","import {createStore, applyMiddleware} from 'redux'\nimport rootReducer from './rootReducer'\nimport {composeWithDevTools} from 'redux-devtools-extension'\nimport thunk from 'redux-thunk'\n\nconst store = createStore(rootReducer, \n    composeWithDevTools(applyMiddleware(thunk))\n)\n\nexport default store","import './App.css';\n\nimport Topbar from './components/topbar/Topbar';\nimport Sidebar from './components/sidebar/Sidebar';\nimport PageDisplay from './components/pageDisplay/PageDisplay';\n\nimport {Provider} from 'react-redux'\nimport store from './redux/store'\n\nimport {\n  BrowserRouter as Router\n} from 'react-router-dom';\n\n\nfunction App() {\n  return (\n    <Router>\n      <Provider store={store}>\n        <div >\n          <Topbar />\n          <div className=\"container\">\n            <Sidebar />\n            <PageDisplay />\n          </div>\n        </div>      \n      </Provider>   \n    </Router> \n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n"],"sourceRoot":""}